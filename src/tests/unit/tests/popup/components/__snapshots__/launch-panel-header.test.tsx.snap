// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LaunchPanelHeaderTest renders 1`] = `
<Header
  subtitle="test subtitle"
  title="test title"
>
  <React.Fragment>
    <FlaggedComponent
      enableJSXElement={
        <CustomizedIconButton
          ariaLabel="open debug tools"
          iconProps={
            {
              "iconName": "Cat",
            }
          }
        />
      }
      featureFlag="debugTools"
      featureFlagStoreData={{}}
    />
    <GearOptionsButtonComponent
      deps={
        {
          "dropdownClickHandler": {},
          "launchPanelHeaderClickHandler": {},
          "popupActionMessageCreator": {},
        }
      }
      featureFlagData={{}}
    />
    <HamburgerMenuButton
      deps={
        {
          "dropdownClickHandler": {},
          "launchPanelHeaderClickHandler": {},
          "popupActionMessageCreator": {},
        }
      }
      header={
        LaunchPanelHeader {
          "context": {},
          "props": {
            "deps": {
              "dropdownClickHandler": {},
              "launchPanelHeaderClickHandler": {},
              "popupActionMessageCreator": {},
            },
            "dropdownClickHandler": {},
            "featureFlags": {},
            "openAdhocToolsPanel": [Function],
            "openFeedbackDialog": {},
            "openGettingStartedDialog": {},
            "popupWindow": {},
            "subtitle": "test subtitle",
            "title": "test title",
          },
          "refs": {},
          "setState": [Function],
          "state": {},
          "updater": Updater {
            "_callbacks": [],
            "_renderer": ReactShallowRenderer {
              "_context": {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <LaunchPanelHeader
                deps={
                  {
                    "dropdownClickHandler": {},
                    "launchPanelHeaderClickHandler": {},
                    "popupActionMessageCreator": {},
                  }
                }
                dropdownClickHandler={{}}
                featureFlags={{}}
                openAdhocToolsPanel={[Function]}
                openFeedbackDialog={{}}
                openGettingStartedDialog={{}}
                popupWindow={{}}
                subtitle="test subtitle"
                title="test title"
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <Header
                subtitle="test subtitle"
                title="test title"
              >
                <React.Fragment>
                  <FlaggedComponent
                    enableJSXElement={
                      <CustomizedIconButton
                        ariaLabel="open debug tools"
                        iconProps={
                          {
                            "iconName": "Cat",
                          }
                        }
                      />
                    }
                    featureFlag="debugTools"
                    featureFlagStoreData={{}}
                  />
                  <GearOptionsButtonComponent
                    deps={
                      {
                        "dropdownClickHandler": {},
                        "launchPanelHeaderClickHandler": {},
                        "popupActionMessageCreator": {},
                      }
                    }
                    featureFlagData={{}}
                  />
                  <HamburgerMenuButton
                    deps={
                      {
                        "dropdownClickHandler": {},
                        "launchPanelHeaderClickHandler": {},
                        "popupActionMessageCreator": {},
                      }
                    }
                    header={[Circular]}
                    popupWindow={{}}
                  />
                </React.Fragment>
              </Header>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      popupWindow={{}}
    />
  </React.Fragment>
</Header>
`;
