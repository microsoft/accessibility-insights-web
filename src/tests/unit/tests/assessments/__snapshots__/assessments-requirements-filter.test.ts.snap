// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`filter by requirements for case all requirements contains only automated checks and assessments with the included requirements 1`] = `
[
  {
    "extensions": [
      {
        "component": {
          "alterRequirementReportModel": [Function],
        },
        "extensionPoint": ExtensionPoint {
          "applyAllExtensions": [Function],
          "base": {
            "alterRequirementReportModel": [Function],
          },
          "extensionPointKey": "assessmentReportExtensionPoint",
          "extensionType": "CallChain",
        },
        "extensionType": "CallChain",
        "type": "Extension",
      },
    ],
    "getVisualizationConfiguration": [Function],
    "gettingStarted": <p>
      Accessibility Insights for Web
       automated accessibility checks can detect some of the most common accessibility issues, depending on the complexity of the site or the application.
    </p>,
    "guidance": [Function],
    "initialDataCreator": [Function],
    "key": "automated-checks",
    "requirements": [
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Active &lt;area&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Active &lt;area&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about area-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/area-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "area-alt",
        "name": "area-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must only use allowed ARIA attributes
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must only use allowed ARIA attributes
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-allowed-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-attr",
        "name": "aria-allowed-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA role should be appropriate for the element
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA role should be appropriate for the element
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-role rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-role",
        "name": "aria-allowed-role",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA commands must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA commands must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-command-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-command-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-command-name",
        "name": "aria-command-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-hidden='true' must not be present on the document body
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-hidden='true' must not be present on the document body
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-body rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-body"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-body",
        "name": "aria-hidden-body",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA hidden element must not contain focusable elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA hidden element must not contain focusable elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-focus rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-focus"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-focus",
        "name": "aria-hidden-focus",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA input fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA input fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-input-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-input-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-input-field-name",
        "name": "aria-input-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA meter nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA meter nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-meter-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-meter-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-meter-name",
        "name": "aria-meter-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA progressbar nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA progressbar nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-progressbar-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-progressbar-name",
        "name": "aria-progressbar-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Required ARIA attributes must be provided
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Required ARIA attributes must be provided
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-attr",
        "name": "aria-required-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must contain particular children
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must contain particular children
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-children rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-children"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-children",
        "name": "aria-required-children",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must be contained by particular parents
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must be contained by particular parents
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-parent rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-parent"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-parent",
        "name": "aria-required-parent",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-roledescription must be on elements with a semantic role
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-roledescription must be on elements with a semantic role
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roledescription rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roledescription"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roledescription",
        "name": "aria-roledescription",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA roles used must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA roles used must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roles rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roles"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roles",
        "name": "aria-roles",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA toggle fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA toggle fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-toggle-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-toggle-field-name",
        "name": "aria-toggle-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA tooltip nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA tooltip nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-tooltip-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-tooltip-name",
        "name": "aria-tooltip-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr-value rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr-value",
        "name": "aria-valid-attr-value",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid names
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid names
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr",
        "name": "aria-valid-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;audio&gt; elements must have a captions track
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
            "tags": [],
            "text": "WCAG 1.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;audio&gt; elements must have a captions track
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about audio-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/audio-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "audio-caption",
        "name": "audio-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          autocomplete attribute must be used correctly
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.3.5",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            autocomplete attribute must be used correctly
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about autocomplete-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/autocomplete-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "autocomplete-valid",
        "name": "autocomplete-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Inline text spacing must be adjustable with custom stylesheets
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.4.12",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Inline text spacing must be adjustable with custom stylesheets
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about avoid-inline-spacing rule"
            href="https://accessibilityinsights.io/info-examples/web/avoid-inline-spacing"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "avoid-inline-spacing",
        "name": "avoid-inline-spacing",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;blink&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;blink&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about blink rule"
            href="https://accessibilityinsights.io/info-examples/web/blink"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "blink",
        "name": "blink",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "button-name",
        "name": "button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Page must have means to bypass repeated blocks
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Page must have means to bypass repeated blocks
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about bypass rule"
            href="https://accessibilityinsights.io/info-examples/web/bypass"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "bypass",
        "name": "bypass",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must have sufficient color contrast
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html",
            "tags": [],
            "text": "WCAG 1.4.3",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must have sufficient color contrast
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about color-contrast rule"
            href="https://accessibilityinsights.io/info-examples/web/color-contrast"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "color-contrast",
        "name": "color-contrast",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about definition-list rule"
            href="https://accessibilityinsights.io/info-examples/web/definition-list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "definition-list",
        "name": "definition-list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about dlitem rule"
            href="https://accessibilityinsights.io/info-examples/web/dlitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "dlitem",
        "name": "dlitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Documents must have &lt;title&gt; element to aid in navigation
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html",
            "tags": [],
            "text": "WCAG 2.4.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Documents must have &lt;title&gt; element to aid in navigation
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about document-title rule"
            href="https://accessibilityinsights.io/info-examples/web/document-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "document-title",
        "name": "document-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs of active elements must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs of active elements must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-active rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-active"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-active",
        "name": "duplicate-id-active",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs used in ARIA and labels must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs used in ARIA and labels must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-aria rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-aria"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-aria",
        "name": "duplicate-id-aria",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames with focusable content must not have tabindex=-1
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames with focusable content must not have tabindex=-1
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-focusable-content rule"
            href="https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-focusable-content",
        "name": "frame-focusable-content",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-title rule"
            href="https://accessibilityinsights.io/info-examples/web/frame-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-title",
        "name": "frame-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-has-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/html-has-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-has-lang",
        "name": "html-has-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a valid value for the lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a valid value for the lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-lang-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/html-lang-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-lang-valid",
        "name": "html-lang-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          HTML elements with lang and xml:lang must have the same base language
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            HTML elements with lang and xml:lang must have the same base language
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-xml-lang-mismatch rule"
            href="https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-xml-lang-mismatch",
        "name": "html-xml-lang-mismatch",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Images must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Images must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "image-alt",
        "name": "image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Input buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Input buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/input-button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-button-name",
        "name": "input-button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Image buttons must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Image buttons must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/input-image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-image-alt",
        "name": "input-image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Form elements must have labels
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Form elements must have labels
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about label rule"
            href="https://accessibilityinsights.io/info-examples/web/label"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "label",
        "name": "label",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Links must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Links must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about link-name rule"
            href="https://accessibilityinsights.io/info-examples/web/link-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "link-name",
        "name": "link-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about list rule"
            href="https://accessibilityinsights.io/info-examples/web/list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "list",
        "name": "list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about listitem rule"
            href="https://accessibilityinsights.io/info-examples/web/listitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "listitem",
        "name": "listitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;marquee&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;marquee&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about marquee rule"
            href="https://accessibilityinsights.io/info-examples/web/marquee"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "marquee",
        "name": "marquee",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Timed refresh must not exist
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html",
            "tags": [],
            "text": "WCAG 2.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Timed refresh must not exist
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about meta-refresh rule"
            href="https://accessibilityinsights.io/info-examples/web/meta-refresh"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "meta-refresh",
        "name": "meta-refresh",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Interactive controls must not be nested
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Interactive controls must not be nested
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about nested-interactive rule"
            href="https://dequeuniversity.com/rules/axe/4.4/nested-interactive?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "nested-interactive",
        "name": "nested-interactive",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;object&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;object&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about object-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/object-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "object-alt",
        "name": "object-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements of role none or presentation should be flagged
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements of role none or presentation should be flagged
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about presentation-role-conflict rule"
            href="https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "presentation-role-conflict",
        "name": "presentation-role-conflict",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          [role='img'] elements must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            [role='img'] elements must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about role-img-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/role-img-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "role-img-alt",
        "name": "role-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Select element must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Select element must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about select-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/select-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "select-name",
        "name": "select-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Server-side image maps must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Server-side image maps must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about server-side-image-map rule"
            href="https://accessibilityinsights.io/info-examples/web/server-side-image-map"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "server-side-image-map",
        "name": "server-side-image-map",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;svg&gt; elements with an img role must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;svg&gt; elements with an img role must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about svg-img-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/svg-img-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "svg-img-alt",
        "name": "svg-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table cells that use the headers attribute must only refer to cells in the same table
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table cells that use the headers attribute must only refer to cells in the same table
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about td-headers-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/td-headers-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "td-headers-attr",
        "name": "td-headers-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table headers in a data table must refer to data cells
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table headers in a data table must refer to data cells
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about th-has-data-cells rule"
            href="https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "th-has-data-cells",
        "name": "th-has-data-cells",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          lang attribute must have a valid value
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts.html",
            "tags": [],
            "text": "WCAG 3.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            lang attribute must have a valid value
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about valid-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/valid-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "valid-lang",
        "name": "valid-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;video&gt; elements must have captions
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded.html",
            "tags": [],
            "text": "WCAG 1.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;video&gt; elements must have captions
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about video-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/video-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "video-caption",
        "name": "video-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
    ],
    "storeDataKey": "automatedChecks",
    "title": "Automated checks",
    "visualizationType": 24,
  },
  {
    "featureFlag": {
      "required": [
        "x",
      ],
    },
    "key": "x",
    "requirements": [
      {
        "key": "a",
      },
      {
        "key": "b",
      },
    ],
  },
  {
    "featureFlag": {
      "required": [
        "y",
      ],
    },
    "key": "y",
    "requirements": [
      {
        "key": "c",
      },
    ],
  },
  {
    "featureFlag": {
      "required": [
        "x",
        "y",
      ],
    },
    "key": "x & y",
    "requirements": [
      {
        "key": "d",
      },
      {
        "key": "e",
      },
    ],
  },
  {
    "key": "missing",
    "requirements": [
      {
        "key": "f",
      },
    ],
  },
]
`;

exports[`filter by requirements for case all requirements with featureFlag false contains only automated checks and assessments with the included requirements 1`] = `
[
  {
    "extensions": [
      {
        "component": {
          "alterRequirementReportModel": [Function],
        },
        "extensionPoint": ExtensionPoint {
          "applyAllExtensions": [Function],
          "base": {
            "alterRequirementReportModel": [Function],
          },
          "extensionPointKey": "assessmentReportExtensionPoint",
          "extensionType": "CallChain",
        },
        "extensionType": "CallChain",
        "type": "Extension",
      },
    ],
    "getVisualizationConfiguration": [Function],
    "gettingStarted": <p>
      Accessibility Insights for Web
       automated accessibility checks can detect some of the most common accessibility issues, depending on the complexity of the site or the application.
    </p>,
    "guidance": [Function],
    "initialDataCreator": [Function],
    "key": "automated-checks",
    "requirements": [
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Active &lt;area&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Active &lt;area&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about area-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/area-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "area-alt",
        "name": "area-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must only use allowed ARIA attributes
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must only use allowed ARIA attributes
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-allowed-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-attr",
        "name": "aria-allowed-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA role should be appropriate for the element
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA role should be appropriate for the element
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-role rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-role",
        "name": "aria-allowed-role",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA commands must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA commands must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-command-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-command-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-command-name",
        "name": "aria-command-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-hidden='true' must not be present on the document body
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-hidden='true' must not be present on the document body
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-body rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-body"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-body",
        "name": "aria-hidden-body",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA hidden element must not contain focusable elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA hidden element must not contain focusable elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-focus rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-focus"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-focus",
        "name": "aria-hidden-focus",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA input fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA input fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-input-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-input-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-input-field-name",
        "name": "aria-input-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA meter nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA meter nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-meter-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-meter-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-meter-name",
        "name": "aria-meter-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA progressbar nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA progressbar nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-progressbar-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-progressbar-name",
        "name": "aria-progressbar-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Required ARIA attributes must be provided
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Required ARIA attributes must be provided
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-attr",
        "name": "aria-required-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must contain particular children
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must contain particular children
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-children rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-children"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-children",
        "name": "aria-required-children",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must be contained by particular parents
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must be contained by particular parents
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-parent rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-parent"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-parent",
        "name": "aria-required-parent",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-roledescription must be on elements with a semantic role
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-roledescription must be on elements with a semantic role
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roledescription rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roledescription"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roledescription",
        "name": "aria-roledescription",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA roles used must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA roles used must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roles rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roles"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roles",
        "name": "aria-roles",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA toggle fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA toggle fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-toggle-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-toggle-field-name",
        "name": "aria-toggle-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA tooltip nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA tooltip nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-tooltip-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-tooltip-name",
        "name": "aria-tooltip-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr-value rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr-value",
        "name": "aria-valid-attr-value",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid names
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid names
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr",
        "name": "aria-valid-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;audio&gt; elements must have a captions track
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
            "tags": [],
            "text": "WCAG 1.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;audio&gt; elements must have a captions track
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about audio-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/audio-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "audio-caption",
        "name": "audio-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          autocomplete attribute must be used correctly
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.3.5",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            autocomplete attribute must be used correctly
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about autocomplete-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/autocomplete-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "autocomplete-valid",
        "name": "autocomplete-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Inline text spacing must be adjustable with custom stylesheets
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.4.12",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Inline text spacing must be adjustable with custom stylesheets
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about avoid-inline-spacing rule"
            href="https://accessibilityinsights.io/info-examples/web/avoid-inline-spacing"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "avoid-inline-spacing",
        "name": "avoid-inline-spacing",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;blink&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;blink&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about blink rule"
            href="https://accessibilityinsights.io/info-examples/web/blink"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "blink",
        "name": "blink",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "button-name",
        "name": "button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Page must have means to bypass repeated blocks
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Page must have means to bypass repeated blocks
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about bypass rule"
            href="https://accessibilityinsights.io/info-examples/web/bypass"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "bypass",
        "name": "bypass",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must have sufficient color contrast
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html",
            "tags": [],
            "text": "WCAG 1.4.3",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must have sufficient color contrast
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about color-contrast rule"
            href="https://accessibilityinsights.io/info-examples/web/color-contrast"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "color-contrast",
        "name": "color-contrast",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about definition-list rule"
            href="https://accessibilityinsights.io/info-examples/web/definition-list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "definition-list",
        "name": "definition-list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about dlitem rule"
            href="https://accessibilityinsights.io/info-examples/web/dlitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "dlitem",
        "name": "dlitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Documents must have &lt;title&gt; element to aid in navigation
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html",
            "tags": [],
            "text": "WCAG 2.4.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Documents must have &lt;title&gt; element to aid in navigation
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about document-title rule"
            href="https://accessibilityinsights.io/info-examples/web/document-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "document-title",
        "name": "document-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs of active elements must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs of active elements must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-active rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-active"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-active",
        "name": "duplicate-id-active",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs used in ARIA and labels must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs used in ARIA and labels must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-aria rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-aria"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-aria",
        "name": "duplicate-id-aria",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames with focusable content must not have tabindex=-1
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames with focusable content must not have tabindex=-1
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-focusable-content rule"
            href="https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-focusable-content",
        "name": "frame-focusable-content",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-title rule"
            href="https://accessibilityinsights.io/info-examples/web/frame-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-title",
        "name": "frame-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-has-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/html-has-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-has-lang",
        "name": "html-has-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a valid value for the lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a valid value for the lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-lang-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/html-lang-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-lang-valid",
        "name": "html-lang-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          HTML elements with lang and xml:lang must have the same base language
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            HTML elements with lang and xml:lang must have the same base language
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-xml-lang-mismatch rule"
            href="https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-xml-lang-mismatch",
        "name": "html-xml-lang-mismatch",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Images must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Images must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "image-alt",
        "name": "image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Input buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Input buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/input-button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-button-name",
        "name": "input-button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Image buttons must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Image buttons must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/input-image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-image-alt",
        "name": "input-image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Form elements must have labels
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Form elements must have labels
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about label rule"
            href="https://accessibilityinsights.io/info-examples/web/label"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "label",
        "name": "label",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Links must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Links must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about link-name rule"
            href="https://accessibilityinsights.io/info-examples/web/link-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "link-name",
        "name": "link-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about list rule"
            href="https://accessibilityinsights.io/info-examples/web/list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "list",
        "name": "list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about listitem rule"
            href="https://accessibilityinsights.io/info-examples/web/listitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "listitem",
        "name": "listitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;marquee&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;marquee&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about marquee rule"
            href="https://accessibilityinsights.io/info-examples/web/marquee"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "marquee",
        "name": "marquee",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Timed refresh must not exist
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html",
            "tags": [],
            "text": "WCAG 2.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Timed refresh must not exist
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about meta-refresh rule"
            href="https://accessibilityinsights.io/info-examples/web/meta-refresh"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "meta-refresh",
        "name": "meta-refresh",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Interactive controls must not be nested
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Interactive controls must not be nested
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about nested-interactive rule"
            href="https://dequeuniversity.com/rules/axe/4.4/nested-interactive?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "nested-interactive",
        "name": "nested-interactive",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;object&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;object&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about object-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/object-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "object-alt",
        "name": "object-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements of role none or presentation should be flagged
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements of role none or presentation should be flagged
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about presentation-role-conflict rule"
            href="https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "presentation-role-conflict",
        "name": "presentation-role-conflict",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          [role='img'] elements must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            [role='img'] elements must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about role-img-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/role-img-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "role-img-alt",
        "name": "role-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Select element must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Select element must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about select-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/select-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "select-name",
        "name": "select-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Server-side image maps must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Server-side image maps must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about server-side-image-map rule"
            href="https://accessibilityinsights.io/info-examples/web/server-side-image-map"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "server-side-image-map",
        "name": "server-side-image-map",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;svg&gt; elements with an img role must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;svg&gt; elements with an img role must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about svg-img-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/svg-img-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "svg-img-alt",
        "name": "svg-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table cells that use the headers attribute must only refer to cells in the same table
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table cells that use the headers attribute must only refer to cells in the same table
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about td-headers-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/td-headers-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "td-headers-attr",
        "name": "td-headers-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table headers in a data table must refer to data cells
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table headers in a data table must refer to data cells
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about th-has-data-cells rule"
            href="https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "th-has-data-cells",
        "name": "th-has-data-cells",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          lang attribute must have a valid value
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts.html",
            "tags": [],
            "text": "WCAG 3.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            lang attribute must have a valid value
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about valid-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/valid-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "valid-lang",
        "name": "valid-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;video&gt; elements must have captions
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded.html",
            "tags": [],
            "text": "WCAG 1.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;video&gt; elements must have captions
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about video-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/video-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "video-caption",
        "name": "video-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
    ],
    "storeDataKey": "automatedChecks",
    "title": "Automated checks",
    "visualizationType": 24,
  },
  {
    "featureFlag": {
      "required": [
        "y",
      ],
    },
    "key": "y",
    "requirements": [
      {
        "key": "c",
      },
    ],
  },
  {
    "key": "missing",
    "requirements": [
      {
        "key": "f",
      },
    ],
  },
]
`;

exports[`filter by requirements for case all requirements with no feature flags contains only automated checks and assessments with the included requirements 1`] = `
[
  {
    "extensions": [
      {
        "component": {
          "alterRequirementReportModel": [Function],
        },
        "extensionPoint": ExtensionPoint {
          "applyAllExtensions": [Function],
          "base": {
            "alterRequirementReportModel": [Function],
          },
          "extensionPointKey": "assessmentReportExtensionPoint",
          "extensionType": "CallChain",
        },
        "extensionType": "CallChain",
        "type": "Extension",
      },
    ],
    "getVisualizationConfiguration": [Function],
    "gettingStarted": <p>
      Accessibility Insights for Web
       automated accessibility checks can detect some of the most common accessibility issues, depending on the complexity of the site or the application.
    </p>,
    "guidance": [Function],
    "initialDataCreator": [Function],
    "key": "automated-checks",
    "requirements": [
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Active &lt;area&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Active &lt;area&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about area-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/area-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "area-alt",
        "name": "area-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must only use allowed ARIA attributes
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must only use allowed ARIA attributes
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-allowed-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-attr",
        "name": "aria-allowed-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA role should be appropriate for the element
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA role should be appropriate for the element
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-role rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-role",
        "name": "aria-allowed-role",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA commands must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA commands must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-command-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-command-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-command-name",
        "name": "aria-command-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-hidden='true' must not be present on the document body
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-hidden='true' must not be present on the document body
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-body rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-body"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-body",
        "name": "aria-hidden-body",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA hidden element must not contain focusable elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA hidden element must not contain focusable elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-focus rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-focus"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-focus",
        "name": "aria-hidden-focus",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA input fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA input fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-input-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-input-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-input-field-name",
        "name": "aria-input-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA meter nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA meter nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-meter-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-meter-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-meter-name",
        "name": "aria-meter-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA progressbar nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA progressbar nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-progressbar-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-progressbar-name",
        "name": "aria-progressbar-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Required ARIA attributes must be provided
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Required ARIA attributes must be provided
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-attr",
        "name": "aria-required-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must contain particular children
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must contain particular children
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-children rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-children"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-children",
        "name": "aria-required-children",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must be contained by particular parents
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must be contained by particular parents
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-parent rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-parent"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-parent",
        "name": "aria-required-parent",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-roledescription must be on elements with a semantic role
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-roledescription must be on elements with a semantic role
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roledescription rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roledescription"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roledescription",
        "name": "aria-roledescription",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA roles used must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA roles used must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roles rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roles"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roles",
        "name": "aria-roles",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA toggle fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA toggle fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-toggle-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-toggle-field-name",
        "name": "aria-toggle-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA tooltip nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA tooltip nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-tooltip-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-tooltip-name",
        "name": "aria-tooltip-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr-value rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr-value",
        "name": "aria-valid-attr-value",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid names
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid names
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr",
        "name": "aria-valid-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;audio&gt; elements must have a captions track
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
            "tags": [],
            "text": "WCAG 1.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;audio&gt; elements must have a captions track
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about audio-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/audio-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "audio-caption",
        "name": "audio-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          autocomplete attribute must be used correctly
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.3.5",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            autocomplete attribute must be used correctly
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about autocomplete-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/autocomplete-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "autocomplete-valid",
        "name": "autocomplete-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Inline text spacing must be adjustable with custom stylesheets
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.4.12",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Inline text spacing must be adjustable with custom stylesheets
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about avoid-inline-spacing rule"
            href="https://accessibilityinsights.io/info-examples/web/avoid-inline-spacing"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "avoid-inline-spacing",
        "name": "avoid-inline-spacing",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;blink&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;blink&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about blink rule"
            href="https://accessibilityinsights.io/info-examples/web/blink"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "blink",
        "name": "blink",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "button-name",
        "name": "button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Page must have means to bypass repeated blocks
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Page must have means to bypass repeated blocks
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about bypass rule"
            href="https://accessibilityinsights.io/info-examples/web/bypass"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "bypass",
        "name": "bypass",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must have sufficient color contrast
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html",
            "tags": [],
            "text": "WCAG 1.4.3",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must have sufficient color contrast
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about color-contrast rule"
            href="https://accessibilityinsights.io/info-examples/web/color-contrast"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "color-contrast",
        "name": "color-contrast",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about definition-list rule"
            href="https://accessibilityinsights.io/info-examples/web/definition-list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "definition-list",
        "name": "definition-list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about dlitem rule"
            href="https://accessibilityinsights.io/info-examples/web/dlitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "dlitem",
        "name": "dlitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Documents must have &lt;title&gt; element to aid in navigation
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html",
            "tags": [],
            "text": "WCAG 2.4.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Documents must have &lt;title&gt; element to aid in navigation
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about document-title rule"
            href="https://accessibilityinsights.io/info-examples/web/document-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "document-title",
        "name": "document-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs of active elements must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs of active elements must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-active rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-active"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-active",
        "name": "duplicate-id-active",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs used in ARIA and labels must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs used in ARIA and labels must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-aria rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-aria"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-aria",
        "name": "duplicate-id-aria",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames with focusable content must not have tabindex=-1
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames with focusable content must not have tabindex=-1
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-focusable-content rule"
            href="https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-focusable-content",
        "name": "frame-focusable-content",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-title rule"
            href="https://accessibilityinsights.io/info-examples/web/frame-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-title",
        "name": "frame-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-has-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/html-has-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-has-lang",
        "name": "html-has-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a valid value for the lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a valid value for the lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-lang-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/html-lang-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-lang-valid",
        "name": "html-lang-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          HTML elements with lang and xml:lang must have the same base language
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            HTML elements with lang and xml:lang must have the same base language
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-xml-lang-mismatch rule"
            href="https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-xml-lang-mismatch",
        "name": "html-xml-lang-mismatch",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Images must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Images must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "image-alt",
        "name": "image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Input buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Input buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/input-button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-button-name",
        "name": "input-button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Image buttons must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Image buttons must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/input-image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-image-alt",
        "name": "input-image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Form elements must have labels
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Form elements must have labels
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about label rule"
            href="https://accessibilityinsights.io/info-examples/web/label"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "label",
        "name": "label",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Links must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Links must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about link-name rule"
            href="https://accessibilityinsights.io/info-examples/web/link-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "link-name",
        "name": "link-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about list rule"
            href="https://accessibilityinsights.io/info-examples/web/list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "list",
        "name": "list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about listitem rule"
            href="https://accessibilityinsights.io/info-examples/web/listitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "listitem",
        "name": "listitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;marquee&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;marquee&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about marquee rule"
            href="https://accessibilityinsights.io/info-examples/web/marquee"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "marquee",
        "name": "marquee",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Timed refresh must not exist
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html",
            "tags": [],
            "text": "WCAG 2.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Timed refresh must not exist
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about meta-refresh rule"
            href="https://accessibilityinsights.io/info-examples/web/meta-refresh"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "meta-refresh",
        "name": "meta-refresh",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Interactive controls must not be nested
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Interactive controls must not be nested
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about nested-interactive rule"
            href="https://dequeuniversity.com/rules/axe/4.4/nested-interactive?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "nested-interactive",
        "name": "nested-interactive",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;object&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;object&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about object-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/object-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "object-alt",
        "name": "object-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements of role none or presentation should be flagged
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements of role none or presentation should be flagged
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about presentation-role-conflict rule"
            href="https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "presentation-role-conflict",
        "name": "presentation-role-conflict",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          [role='img'] elements must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            [role='img'] elements must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about role-img-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/role-img-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "role-img-alt",
        "name": "role-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Select element must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Select element must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about select-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/select-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "select-name",
        "name": "select-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Server-side image maps must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Server-side image maps must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about server-side-image-map rule"
            href="https://accessibilityinsights.io/info-examples/web/server-side-image-map"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "server-side-image-map",
        "name": "server-side-image-map",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;svg&gt; elements with an img role must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;svg&gt; elements with an img role must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about svg-img-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/svg-img-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "svg-img-alt",
        "name": "svg-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table cells that use the headers attribute must only refer to cells in the same table
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table cells that use the headers attribute must only refer to cells in the same table
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about td-headers-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/td-headers-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "td-headers-attr",
        "name": "td-headers-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table headers in a data table must refer to data cells
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table headers in a data table must refer to data cells
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about th-has-data-cells rule"
            href="https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "th-has-data-cells",
        "name": "th-has-data-cells",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          lang attribute must have a valid value
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts.html",
            "tags": [],
            "text": "WCAG 3.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            lang attribute must have a valid value
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about valid-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/valid-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "valid-lang",
        "name": "valid-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;video&gt; elements must have captions
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded.html",
            "tags": [],
            "text": "WCAG 1.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;video&gt; elements must have captions
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about video-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/video-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "video-caption",
        "name": "video-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
    ],
    "storeDataKey": "automatedChecks",
    "title": "Automated checks",
    "visualizationType": 24,
  },
  {
    "key": "missing",
    "requirements": [
      {
        "key": "f",
      },
    ],
  },
]
`;

exports[`filter by requirements for case empty requirements contains only automated checks and assessments with the included requirements 1`] = `
[
  {
    "extensions": [
      {
        "component": {
          "alterRequirementReportModel": [Function],
        },
        "extensionPoint": ExtensionPoint {
          "applyAllExtensions": [Function],
          "base": {
            "alterRequirementReportModel": [Function],
          },
          "extensionPointKey": "assessmentReportExtensionPoint",
          "extensionType": "CallChain",
        },
        "extensionType": "CallChain",
        "type": "Extension",
      },
    ],
    "getVisualizationConfiguration": [Function],
    "gettingStarted": <p>
      Accessibility Insights for Web
       automated accessibility checks can detect some of the most common accessibility issues, depending on the complexity of the site or the application.
    </p>,
    "guidance": [Function],
    "initialDataCreator": [Function],
    "key": "automated-checks",
    "requirements": [
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Active &lt;area&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Active &lt;area&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about area-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/area-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "area-alt",
        "name": "area-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must only use allowed ARIA attributes
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must only use allowed ARIA attributes
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-allowed-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-attr",
        "name": "aria-allowed-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA role should be appropriate for the element
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA role should be appropriate for the element
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-role rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-role",
        "name": "aria-allowed-role",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA commands must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA commands must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-command-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-command-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-command-name",
        "name": "aria-command-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-hidden='true' must not be present on the document body
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-hidden='true' must not be present on the document body
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-body rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-body"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-body",
        "name": "aria-hidden-body",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA hidden element must not contain focusable elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA hidden element must not contain focusable elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-focus rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-focus"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-focus",
        "name": "aria-hidden-focus",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA input fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA input fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-input-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-input-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-input-field-name",
        "name": "aria-input-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA meter nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA meter nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-meter-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-meter-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-meter-name",
        "name": "aria-meter-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA progressbar nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA progressbar nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-progressbar-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-progressbar-name",
        "name": "aria-progressbar-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Required ARIA attributes must be provided
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Required ARIA attributes must be provided
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-attr",
        "name": "aria-required-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must contain particular children
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must contain particular children
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-children rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-children"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-children",
        "name": "aria-required-children",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must be contained by particular parents
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must be contained by particular parents
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-parent rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-parent"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-parent",
        "name": "aria-required-parent",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-roledescription must be on elements with a semantic role
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-roledescription must be on elements with a semantic role
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roledescription rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roledescription"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roledescription",
        "name": "aria-roledescription",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA roles used must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA roles used must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roles rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roles"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roles",
        "name": "aria-roles",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA toggle fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA toggle fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-toggle-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-toggle-field-name",
        "name": "aria-toggle-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA tooltip nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA tooltip nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-tooltip-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-tooltip-name",
        "name": "aria-tooltip-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr-value rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr-value",
        "name": "aria-valid-attr-value",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid names
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid names
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr",
        "name": "aria-valid-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;audio&gt; elements must have a captions track
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
            "tags": [],
            "text": "WCAG 1.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;audio&gt; elements must have a captions track
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about audio-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/audio-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "audio-caption",
        "name": "audio-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          autocomplete attribute must be used correctly
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.3.5",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            autocomplete attribute must be used correctly
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about autocomplete-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/autocomplete-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "autocomplete-valid",
        "name": "autocomplete-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Inline text spacing must be adjustable with custom stylesheets
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.4.12",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Inline text spacing must be adjustable with custom stylesheets
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about avoid-inline-spacing rule"
            href="https://accessibilityinsights.io/info-examples/web/avoid-inline-spacing"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "avoid-inline-spacing",
        "name": "avoid-inline-spacing",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;blink&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;blink&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about blink rule"
            href="https://accessibilityinsights.io/info-examples/web/blink"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "blink",
        "name": "blink",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "button-name",
        "name": "button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Page must have means to bypass repeated blocks
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Page must have means to bypass repeated blocks
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about bypass rule"
            href="https://accessibilityinsights.io/info-examples/web/bypass"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "bypass",
        "name": "bypass",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must have sufficient color contrast
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html",
            "tags": [],
            "text": "WCAG 1.4.3",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must have sufficient color contrast
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about color-contrast rule"
            href="https://accessibilityinsights.io/info-examples/web/color-contrast"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "color-contrast",
        "name": "color-contrast",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about definition-list rule"
            href="https://accessibilityinsights.io/info-examples/web/definition-list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "definition-list",
        "name": "definition-list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about dlitem rule"
            href="https://accessibilityinsights.io/info-examples/web/dlitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "dlitem",
        "name": "dlitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Documents must have &lt;title&gt; element to aid in navigation
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html",
            "tags": [],
            "text": "WCAG 2.4.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Documents must have &lt;title&gt; element to aid in navigation
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about document-title rule"
            href="https://accessibilityinsights.io/info-examples/web/document-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "document-title",
        "name": "document-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs of active elements must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs of active elements must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-active rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-active"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-active",
        "name": "duplicate-id-active",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs used in ARIA and labels must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs used in ARIA and labels must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-aria rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-aria"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-aria",
        "name": "duplicate-id-aria",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames with focusable content must not have tabindex=-1
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames with focusable content must not have tabindex=-1
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-focusable-content rule"
            href="https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-focusable-content",
        "name": "frame-focusable-content",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-title rule"
            href="https://accessibilityinsights.io/info-examples/web/frame-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-title",
        "name": "frame-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-has-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/html-has-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-has-lang",
        "name": "html-has-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a valid value for the lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a valid value for the lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-lang-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/html-lang-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-lang-valid",
        "name": "html-lang-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          HTML elements with lang and xml:lang must have the same base language
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            HTML elements with lang and xml:lang must have the same base language
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-xml-lang-mismatch rule"
            href="https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-xml-lang-mismatch",
        "name": "html-xml-lang-mismatch",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Images must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Images must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "image-alt",
        "name": "image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Input buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Input buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/input-button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-button-name",
        "name": "input-button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Image buttons must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Image buttons must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/input-image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-image-alt",
        "name": "input-image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Form elements must have labels
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Form elements must have labels
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about label rule"
            href="https://accessibilityinsights.io/info-examples/web/label"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "label",
        "name": "label",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Links must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Links must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about link-name rule"
            href="https://accessibilityinsights.io/info-examples/web/link-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "link-name",
        "name": "link-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about list rule"
            href="https://accessibilityinsights.io/info-examples/web/list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "list",
        "name": "list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about listitem rule"
            href="https://accessibilityinsights.io/info-examples/web/listitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "listitem",
        "name": "listitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;marquee&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;marquee&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about marquee rule"
            href="https://accessibilityinsights.io/info-examples/web/marquee"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "marquee",
        "name": "marquee",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Timed refresh must not exist
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html",
            "tags": [],
            "text": "WCAG 2.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Timed refresh must not exist
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about meta-refresh rule"
            href="https://accessibilityinsights.io/info-examples/web/meta-refresh"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "meta-refresh",
        "name": "meta-refresh",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Interactive controls must not be nested
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Interactive controls must not be nested
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about nested-interactive rule"
            href="https://dequeuniversity.com/rules/axe/4.4/nested-interactive?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "nested-interactive",
        "name": "nested-interactive",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;object&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;object&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about object-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/object-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "object-alt",
        "name": "object-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements of role none or presentation should be flagged
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements of role none or presentation should be flagged
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about presentation-role-conflict rule"
            href="https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "presentation-role-conflict",
        "name": "presentation-role-conflict",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          [role='img'] elements must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            [role='img'] elements must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about role-img-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/role-img-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "role-img-alt",
        "name": "role-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Select element must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Select element must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about select-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/select-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "select-name",
        "name": "select-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Server-side image maps must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Server-side image maps must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about server-side-image-map rule"
            href="https://accessibilityinsights.io/info-examples/web/server-side-image-map"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "server-side-image-map",
        "name": "server-side-image-map",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;svg&gt; elements with an img role must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;svg&gt; elements with an img role must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about svg-img-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/svg-img-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "svg-img-alt",
        "name": "svg-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table cells that use the headers attribute must only refer to cells in the same table
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table cells that use the headers attribute must only refer to cells in the same table
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about td-headers-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/td-headers-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "td-headers-attr",
        "name": "td-headers-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table headers in a data table must refer to data cells
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table headers in a data table must refer to data cells
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about th-has-data-cells rule"
            href="https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "th-has-data-cells",
        "name": "th-has-data-cells",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          lang attribute must have a valid value
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts.html",
            "tags": [],
            "text": "WCAG 3.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            lang attribute must have a valid value
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about valid-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/valid-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "valid-lang",
        "name": "valid-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;video&gt; elements must have captions
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded.html",
            "tags": [],
            "text": "WCAG 1.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;video&gt; elements must have captions
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about video-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/video-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "video-caption",
        "name": "video-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
    ],
    "storeDataKey": "automatedChecks",
    "title": "Automated checks",
    "visualizationType": 24,
  },
]
`;

exports[`filter by requirements for case only one requirement contains only automated checks and assessments with the included requirements 1`] = `
[
  {
    "extensions": [
      {
        "component": {
          "alterRequirementReportModel": [Function],
        },
        "extensionPoint": ExtensionPoint {
          "applyAllExtensions": [Function],
          "base": {
            "alterRequirementReportModel": [Function],
          },
          "extensionPointKey": "assessmentReportExtensionPoint",
          "extensionType": "CallChain",
        },
        "extensionType": "CallChain",
        "type": "Extension",
      },
    ],
    "getVisualizationConfiguration": [Function],
    "gettingStarted": <p>
      Accessibility Insights for Web
       automated accessibility checks can detect some of the most common accessibility issues, depending on the complexity of the site or the application.
    </p>,
    "guidance": [Function],
    "initialDataCreator": [Function],
    "key": "automated-checks",
    "requirements": [
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Active &lt;area&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Active &lt;area&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about area-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/area-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "area-alt",
        "name": "area-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must only use allowed ARIA attributes
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must only use allowed ARIA attributes
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-allowed-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-attr",
        "name": "aria-allowed-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA role should be appropriate for the element
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA role should be appropriate for the element
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-allowed-role rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-allowed-role",
        "name": "aria-allowed-role",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA commands must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA commands must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-command-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-command-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-command-name",
        "name": "aria-command-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-hidden='true' must not be present on the document body
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-hidden='true' must not be present on the document body
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-body rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-body"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-body",
        "name": "aria-hidden-body",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA hidden element must not contain focusable elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA hidden element must not contain focusable elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-hidden-focus rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-hidden-focus"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-hidden-focus",
        "name": "aria-hidden-focus",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA input fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA input fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-input-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-input-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-input-field-name",
        "name": "aria-input-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA meter nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA meter nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-meter-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-meter-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-meter-name",
        "name": "aria-meter-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA progressbar nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA progressbar nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-progressbar-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-progressbar-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-progressbar-name",
        "name": "aria-progressbar-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Required ARIA attributes must be provided
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Required ARIA attributes must be provided
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-attr",
        "name": "aria-required-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must contain particular children
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must contain particular children
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-children rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-children"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-children",
        "name": "aria-required-children",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Certain ARIA roles must be contained by particular parents
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Certain ARIA roles must be contained by particular parents
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-required-parent rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-required-parent"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-required-parent",
        "name": "aria-required-parent",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          aria-roledescription must be on elements with a semantic role
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            aria-roledescription must be on elements with a semantic role
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roledescription rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roledescription"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roledescription",
        "name": "aria-roledescription",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA roles used must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA roles used must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-roles rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-roles"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-roles",
        "name": "aria-roles",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA toggle fields must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA toggle fields must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-toggle-field-name rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-toggle-field-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-toggle-field-name",
        "name": "aria-toggle-field-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA tooltip nodes must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA tooltip nodes must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-tooltip-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/aria-tooltip-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-tooltip-name",
        "name": "aria-tooltip-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid values
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid values
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr-value rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr-value"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr-value",
        "name": "aria-valid-attr-value",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          ARIA attributes must conform to valid names
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            ARIA attributes must conform to valid names
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about aria-valid-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/aria-valid-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "aria-valid-attr",
        "name": "aria-valid-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;audio&gt; elements must have a captions track
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/audio-only-and-video-only-prerecorded",
            "tags": [],
            "text": "WCAG 1.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;audio&gt; elements must have a captions track
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about audio-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/audio-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "audio-caption",
        "name": "audio-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          autocomplete attribute must be used correctly
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.3.5",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            autocomplete attribute must be used correctly
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about autocomplete-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/autocomplete-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "autocomplete-valid",
        "name": "autocomplete-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Inline text spacing must be adjustable with custom stylesheets
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html",
            "tags": [
              {
                "displayText": "New for WCAG 2.1",
                "id": "WCAG_2_1",
              },
            ],
            "text": "WCAG 1.4.12",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Inline text spacing must be adjustable with custom stylesheets
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about avoid-inline-spacing rule"
            href="https://accessibilityinsights.io/info-examples/web/avoid-inline-spacing"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "avoid-inline-spacing",
        "name": "avoid-inline-spacing",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;blink&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;blink&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about blink rule"
            href="https://accessibilityinsights.io/info-examples/web/blink"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "blink",
        "name": "blink",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "button-name",
        "name": "button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Page must have means to bypass repeated blocks
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Page must have means to bypass repeated blocks
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about bypass rule"
            href="https://accessibilityinsights.io/info-examples/web/bypass"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "bypass",
        "name": "bypass",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements must have sufficient color contrast
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html",
            "tags": [],
            "text": "WCAG 1.4.3",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements must have sufficient color contrast
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about color-contrast rule"
            href="https://accessibilityinsights.io/info-examples/web/color-contrast"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "color-contrast",
        "name": "color-contrast",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dl&gt; elements must only directly contain properly-ordered &lt;dt&gt; and &lt;dd&gt; groups, &lt;script&gt;, &lt;template&gt; or &lt;div&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about definition-list rule"
            href="https://accessibilityinsights.io/info-examples/web/definition-list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "definition-list",
        "name": "definition-list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;dt&gt; and &lt;dd&gt; elements must be contained by a &lt;dl&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about dlitem rule"
            href="https://accessibilityinsights.io/info-examples/web/dlitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "dlitem",
        "name": "dlitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Documents must have &lt;title&gt; element to aid in navigation
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/page-titled.html",
            "tags": [],
            "text": "WCAG 2.4.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Documents must have &lt;title&gt; element to aid in navigation
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about document-title rule"
            href="https://accessibilityinsights.io/info-examples/web/document-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "document-title",
        "name": "document-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs of active elements must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs of active elements must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-active rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-active"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-active",
        "name": "duplicate-id-active",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          IDs used in ARIA and labels must be unique
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/parsing.html",
            "tags": [],
            "text": "WCAG 4.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            IDs used in ARIA and labels must be unique
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about duplicate-id-aria rule"
            href="https://accessibilityinsights.io/info-examples/web/duplicate-id-aria"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "duplicate-id-aria",
        "name": "duplicate-id-aria",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames with focusable content must not have tabindex=-1
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames with focusable content must not have tabindex=-1
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-focusable-content rule"
            href="https://dequeuniversity.com/rules/axe/4.4/frame-focusable-content?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-focusable-content",
        "name": "frame-focusable-content",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Frames must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/bypass-blocks",
            "tags": [],
            "text": "WCAG 2.4.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Frames must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about frame-title rule"
            href="https://accessibilityinsights.io/info-examples/web/frame-title"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "frame-title",
        "name": "frame-title",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-has-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/html-has-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-has-lang",
        "name": "html-has-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;html&gt; element must have a valid value for the lang attribute
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;html&gt; element must have a valid value for the lang attribute
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-lang-valid rule"
            href="https://accessibilityinsights.io/info-examples/web/html-lang-valid"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-lang-valid",
        "name": "html-lang-valid",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          HTML elements with lang and xml:lang must have the same base language
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html",
            "tags": [],
            "text": "WCAG 3.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            HTML elements with lang and xml:lang must have the same base language
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about html-xml-lang-mismatch rule"
            href="https://accessibilityinsights.io/info-examples/web/html-xml-lang-mismatch"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "html-xml-lang-mismatch",
        "name": "html-xml-lang-mismatch",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Images must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Images must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "image-alt",
        "name": "image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Input buttons must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Input buttons must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-button-name rule"
            href="https://accessibilityinsights.io/info-examples/web/input-button-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-button-name",
        "name": "input-button-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Image buttons must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Image buttons must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about input-image-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/input-image-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "input-image-alt",
        "name": "input-image-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Form elements must have labels
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Form elements must have labels
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about label rule"
            href="https://accessibilityinsights.io/info-examples/web/label"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "label",
        "name": "label",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Links must have discernible text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html",
            "tags": [],
            "text": "WCAG 2.4.4",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Links must have discernible text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about link-name rule"
            href="https://accessibilityinsights.io/info-examples/web/link-name"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "link-name",
        "name": "link-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;ul&gt; and &lt;ol&gt; must only directly contain &lt;li&gt;, &lt;script&gt; or &lt;template&gt; elements
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about list rule"
            href="https://accessibilityinsights.io/info-examples/web/list"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "list",
        "name": "list",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;li&gt; elements must be contained in a &lt;ul&gt; or &lt;ol&gt;
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about listitem rule"
            href="https://accessibilityinsights.io/info-examples/web/listitem"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "listitem",
        "name": "listitem",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;marquee&gt; elements are deprecated and must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide",
            "tags": [],
            "text": "WCAG 2.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;marquee&gt; elements are deprecated and must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about marquee rule"
            href="https://accessibilityinsights.io/info-examples/web/marquee"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "marquee",
        "name": "marquee",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Timed refresh must not exist
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html",
            "tags": [],
            "text": "WCAG 2.2.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Timed refresh must not exist
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about meta-refresh rule"
            href="https://accessibilityinsights.io/info-examples/web/meta-refresh"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "meta-refresh",
        "name": "meta-refresh",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Interactive controls must not be nested
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Interactive controls must not be nested
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about nested-interactive rule"
            href="https://dequeuniversity.com/rules/axe/4.4/nested-interactive?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "nested-interactive",
        "name": "nested-interactive",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;object&gt; elements must have alternate text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;object&gt; elements must have alternate text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about object-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/object-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "object-alt",
        "name": "object-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Elements of role none or presentation should be flagged
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "",
            "tags": [
              {
                "displayText": "Best Practice",
                "id": "BEST_PRACTICE",
              },
            ],
            "text": "",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Elements of role none or presentation should be flagged
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about presentation-role-conflict rule"
            href="https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "presentation-role-conflict",
        "name": "presentation-role-conflict",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          [role='img'] elements must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            [role='img'] elements must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about role-img-alt rule"
            href="https://accessibilityinsights.io/info-examples/web/role-img-alt"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "role-img-alt",
        "name": "role-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Select element must have an accessible name
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html",
            "tags": [],
            "text": "WCAG 4.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Select element must have an accessible name
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about select-name rule"
            href="https://dequeuniversity.com/rules/axe/4.4/select-name?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "select-name",
        "name": "select-name",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Server-side image maps must not be used
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
            "tags": [],
            "text": "WCAG 2.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Server-side image maps must not be used
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about server-side-image-map rule"
            href="https://accessibilityinsights.io/info-examples/web/server-side-image-map"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "server-side-image-map",
        "name": "server-side-image-map",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;svg&gt; elements with an img role must have an alternative text
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html",
            "tags": [],
            "text": "WCAG 1.1.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;svg&gt; elements with an img role must have an alternative text
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about svg-img-alt rule"
            href="https://dequeuniversity.com/rules/axe/4.4/svg-img-alt?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "svg-img-alt",
        "name": "svg-img-alt",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table cells that use the headers attribute must only refer to cells in the same table
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table cells that use the headers attribute must only refer to cells in the same table
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about td-headers-attr rule"
            href="https://accessibilityinsights.io/info-examples/web/td-headers-attr"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "td-headers-attr",
        "name": "td-headers-attr",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          Table headers in a data table must refer to data cells
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships",
            "tags": [],
            "text": "WCAG 1.3.1",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            Table headers in a data table must refer to data cells
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about th-has-data-cells rule"
            href="https://dequeuniversity.com/rules/axe/4.4/th-has-data-cells?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "th-has-data-cells",
        "name": "th-has-data-cells",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          lang attribute must have a valid value
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/language-of-parts.html",
            "tags": [],
            "text": "WCAG 3.1.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            lang attribute must have a valid value
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about valid-lang rule"
            href="https://accessibilityinsights.io/info-examples/web/valid-lang"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "valid-lang",
        "name": "valid-lang",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
      {
        "columnsConfig": [
          {
            "key": "path",
            "name": "Path",
            "onRender": [Function],
          },
          {
            "key": "snippet",
            "name": "Snippet",
            "onRender": [Function],
          },
        ],
        "description": <span>
          &lt;video&gt; elements must have captions
          .
        </span>,
        "generateInstanceIdentifier": [Function],
        "getAnalyzer": [Function],
        "getDefaultMessage": [Function],
        "getDrawer": [Function],
        "getInitialManualTestStatus": [Function],
        "getInstanceStatus": [Function],
        "getInstanceStatusColumns": [Function],
        "getVisualHelperToggle": [Function],
        "guidanceLinks": [
          {
            "href": "https://www.w3.org/WAI/WCAG21/Understanding/captions-prerecorded.html",
            "tags": [],
            "text": "WCAG 1.2.2",
          },
        ],
        "howToTest": <React.Fragment>
          <span>
            &lt;video&gt; elements must have captions
            .
          </span>
           
          <NewTabLink
            aria-label="See more info here about video-caption rule"
            href="https://dequeuniversity.com/rules/axe/4.4/video-caption?application=msftAI"
          >
            See more info here.
          </NewTabLink>
        </React.Fragment>,
        "instanceTableHeaderType": "none",
        "isManual": false,
        "isVisualizationSupportedForResult": [Function],
        "key": "video-caption",
        "name": "video-caption",
        "renderReportDescription": [Function],
        "renderRequirementDescription": [Function],
        "reportInstanceFields": [
          {
            "getValue": [Function],
            "key": "path",
            "label": "Path",
          },
          {
            "getValue": [Function],
            "key": "snippet",
            "label": "Snippet",
          },
        ],
      },
    ],
    "storeDataKey": "automatedChecks",
    "title": "Automated checks",
    "visualizationType": 24,
  },
  {
    "featureFlag": {
      "required": [
        "y",
      ],
    },
    "key": "y",
    "requirements": [
      {
        "key": "c",
      },
    ],
  },
]
`;
