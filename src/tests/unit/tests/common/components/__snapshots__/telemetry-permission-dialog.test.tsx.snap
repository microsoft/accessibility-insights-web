// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TelemetryPermissionDialogTest render dialog 1`] = `
<DocumentFragment>
  <mock-styledwithresponsivemode
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
  >
    <div
      class="telemetry-permission-details"
    >
      <mock-telemetrynotice
        deps="[object Object]"
      />
    </div>
    <div
      class="telemetry-checkbox-section"
    >
      <mock-styledcheckboxbase
        checked="true"
        classname="telemetry-agree-checkbox"
        label="I agree to enable telemetry"
      />
      <mock-privacystatementpopuptext
        deps="[object Object]"
      />
    </div>
    <mock-styleddialogfooterbase>
      <mock-customizedprimarybutton
        classname="start-using-product-button"
        text="OK"
      />
    </mock-styleddialogfooterbase>
  </mock-styledwithresponsivemode>
</DocumentFragment>
`;

exports[`TelemetryPermissionDialogTest render dialog: PrivacyStatementPopupText props 1`] = `
{
  "deps": {
    "LinkComponent": [Function],
  },
}
`;

exports[`TelemetryPermissionDialogTest render dialog: StyledWithResponsiveMode props 1`] = `
{
  "children": [
    <div
      className="telemetry-permission-details"
    >
      <TelemetryNotice
        deps={
          {
            "LinkComponent": [Function],
          }
        }
      />
    </div>,
    <div
      className="telemetry-checkbox-section"
    >
      <ForwardRef(StyledCheckboxBase)
        checked={true}
        className="telemetry-agree-checkbox"
        label="I agree to enable telemetry"
        onChange={[Function]}
      />
      <PrivacyStatementPopupText
        deps={
          {
            "LinkComponent": [Function],
          }
        }
      />
    </div>,
    <ForwardRef(StyledDialogFooterBase)>
      <CustomizedPrimaryButton
        className="start-using-product-button"
        onClick={[Function]}
        text="OK"
      />
    </ForwardRef(StyledDialogFooterBase)>,
  ],
  "dialogContentProps": {
    "showCloseButton": false,
    "title": "We need your help",
    "type": 0,
  },
  "hidden": false,
  "modalProps": {
    "className": "telemetry-permission-dialog-modal",
    "containerClassName": "insights-dialog-main-override telemetry-permission-dialog",
    "isBlocking": true,
  },
}
`;

exports[`TelemetryPermissionDialogTest render dialog: TelemetryNotice props 1`] = `
{
  "deps": {
    "LinkComponent": [Function],
  },
}
`;
