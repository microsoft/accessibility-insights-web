// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardFooterInstanceActionButtons renders per snapshot with test-kebabmenuarialabel aria label passed as prop: action button menu props 1`] = `
{
  "ariaLabel": "test-kebabmenuarialabel",
  "componentRef": [Function],
  "menuIconProps": {
    "className": "kebabMenuIcon",
    "iconName": "MoreActionsMenuIcon",
  },
  "menuProps": {
    "directionalHint": 6,
    "items": [
      {
        "key": "item1",
        "onClick": [Function],
        "text": "item 1",
      },
      {
        "key": "item2",
        "onClick": [Function],
        "text": "item 2",
      },
    ],
    "shouldFocusOnMount": true,
  },
}
`;

exports[`CardFooterInstanceActionButtons renders per snapshot with test-kebabmenuarialabel aria label passed as prop: component snapshot 1`] = `
<DocumentFragment>
  <div>
    <mock-customizedactionbutton
      arialabel="test-kebabmenuarialabel"
      menuiconprops="[object Object]"
      menuprops="[object Object]"
    />
    <mock-toast
      deps="[object Object]"
      timeoutlength="6000"
    />
  </div>
</DocumentFragment>
`;

exports[`CardFooterInstanceActionButtons renders per snapshot with undefined aria label passed as prop: action button menu props 1`] = `
{
  "ariaLabel": "More actions",
  "componentRef": [Function],
  "menuIconProps": {
    "className": "kebabMenuIcon",
    "iconName": "MoreActionsMenuIcon",
  },
  "menuProps": {
    "directionalHint": 6,
    "items": [
      {
        "key": "item1",
        "onClick": [Function],
        "text": "item 1",
      },
      {
        "key": "item2",
        "onClick": [Function],
        "text": "item 2",
      },
    ],
    "shouldFocusOnMount": true,
  },
}
`;

exports[`CardFooterInstanceActionButtons renders per snapshot with undefined aria label passed as prop: component snapshot 1`] = `
<DocumentFragment>
  <div>
    <mock-customizedactionbutton
      arialabel="More actions"
      menuiconprops="[object Object]"
      menuprops="[object Object]"
    />
    <mock-toast
      deps="[object Object]"
      timeoutlength="6000"
    />
  </div>
</DocumentFragment>
`;

exports[`CardFooterInstanceActionButtons renders without copyFailureDetails supported: component snapshot 1`] = `
<DocumentFragment>
  <div>
    <span>
      <mock-customizedactionbutton
        classname="item1"
        text="item 1"
      />
    </span>
    <span>
      <mock-customizedactionbutton
        classname="item2"
        text="item 2"
      />
    </span>
  </div>
</DocumentFragment>
`;

exports[`CardFooterInstanceActionButtons with isCardFooterCollapsed=false renders per snapshot: component snapshot 1`] = `
<DocumentFragment>
  <div>
    <span>
      <mock-customizedactionbutton
        classname="item1"
        text="item 1"
      />
    </span>
    <span>
      <mock-customizedactionbutton
        classname="item2"
        text="item 2"
      />
    </span>
    <mock-toast
      deps="[object Object]"
      timeoutlength="6000"
    />
  </div>
</DocumentFragment>
`;

exports[`CardFooterInstanceActionButtons with isCardFooterCollapsed=true renders per snapshot: action button menu props 1`] = `
{
  "ariaLabel": "More actions",
  "componentRef": [Function],
  "menuIconProps": {
    "className": "kebabMenuIcon",
    "iconName": "MoreActionsMenuIcon",
  },
  "menuProps": {
    "directionalHint": 6,
    "items": [
      {
        "key": "item1",
        "onClick": [Function],
        "text": "item 1",
      },
      {
        "key": "item2",
        "onClick": [Function],
        "text": "item 2",
      },
    ],
    "shouldFocusOnMount": true,
  },
}
`;

exports[`CardFooterInstanceActionButtons with isCardFooterCollapsed=true renders per snapshot: component snapshot 1`] = `
<DocumentFragment>
  <div>
    <mock-customizedactionbutton
      arialabel="More actions"
      menuiconprops="[object Object]"
      menuprops="[object Object]"
    />
    <mock-toast
      deps="[object Object]"
      timeoutlength="6000"
    />
  </div>
</DocumentFragment>
`;
