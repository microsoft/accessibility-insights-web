// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RulesWithInstances renders 1`] = `
<DocumentFragment>
  <div
    class="ruleDetailsGroup"
    data-automation-id="rule-details-group"
  >
    <mock-cardscollapsiblecontrol
      buttonarialabel="5 Passed some-rule sample-description"
      containerautomationid="cards-rule-group"
      containerclassname="collapsibleRuleDetailsGroup"
      content="[object Object]"
      deps="[object Object]"
      header="[object Object]"
      headinglevel="5"
      id="some-rule"
    />
  </div>
</DocumentFragment>
`;

exports[`RulesWithInstances renders: CardsCollapsibleControl props 1`] = `
{
  "buttonAriaLabel": "5 Passed some-rule sample-description",
  "containerAutomationId": "cards-rule-group",
  "containerClassName": "collapsibleRuleDetailsGroup",
  "content": <RuleContent
    cardSelectionMessageCreator={[typemoq mock object]}
    deps={
      {
        "collapsibleControl": [MockFunction] {
          "calls": [
            [
              [Circular],
            ],
          ],
          "results": [
            {
              "type": "return",
              "value": <mock-CardsCollapsibleControl
                buttonAriaLabel="5 Passed some-rule sample-description"
                containerAutomationId="cards-rule-group"
                containerClassName="collapsibleRuleDetailsGroup"
                content={
                  <RuleContent
                    cardSelectionMessageCreator={[typemoq mock object]}
                    deps={[Circular]}
                    outcomeType="pass"
                    rule={
                      {
                        "description": "sample-description",
                        "guidance": [
                          {
                            "href": "sample-guidance-href",
                            "text": "sample-guidance-text",
                          },
                        ],
                        "id": "some-rule",
                        "nodes": [
                          {
                            "descriptors": {
                              "snippet": "this is a sample snippet",
                            },
                            "identifiers": {
                              "conciseName": "body img",
                              "css-selector": "body img",
                              "identifier": "body img",
                            },
                            "resolution": {
                              "how-to-fix-web": {
                                "all": [],
                                "any": [
                                  "Element does not have an alt attribute",
                                  "aria-label attribute does not exist or is empty",
                                  "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                                ],
                                "none": [],
                              },
                              "howToFixSummary": "sample how to fix summary",
                            },
                            "ruleId": "image-alt",
                            "status": "fail",
                            "uid": "some-guid-here",
                          },
                        ],
                        "url": "sample-url",
                      }
                    }
                    targetAppInfo={
                      {
                        "name": "app",
                      }
                    }
                    userConfigurationStoreData={null}
                  />
                }
                deps={[Circular]}
                header={
                  <MinimalRuleHeader
                    outcomeCounter={[Function]}
                    outcomeType="pass"
                    rule={
                      {
                        "description": "sample-description",
                        "guidance": [
                          {
                            "href": "sample-guidance-href",
                            "text": "sample-guidance-text",
                          },
                        ],
                        "id": "some-rule",
                        "nodes": [
                          {
                            "descriptors": {
                              "snippet": "this is a sample snippet",
                            },
                            "identifiers": {
                              "conciseName": "body img",
                              "css-selector": "body img",
                              "identifier": "body img",
                            },
                            "resolution": {
                              "how-to-fix-web": {
                                "all": [],
                                "any": [
                                  "Element does not have an alt attribute",
                                  "aria-label attribute does not exist or is empty",
                                  "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                                ],
                                "none": [],
                              },
                              "howToFixSummary": "sample how to fix summary",
                            },
                            "ruleId": "image-alt",
                            "status": "fail",
                            "uid": "some-guid-here",
                          },
                        ],
                        "url": "sample-url",
                      }
                    }
                  />
                }
                headingLevel={5}
                id="some-rule"
                onExpandToggle={[Function]}
              />,
            },
          ],
        },
        "fixInstructionProcessor": [typemoq mock object],
      }
    }
    outcomeType="pass"
    rule={
      {
        "description": "sample-description",
        "guidance": [
          {
            "href": "sample-guidance-href",
            "text": "sample-guidance-text",
          },
        ],
        "id": "some-rule",
        "nodes": [
          {
            "descriptors": {
              "snippet": "this is a sample snippet",
            },
            "identifiers": {
              "conciseName": "body img",
              "css-selector": "body img",
              "identifier": "body img",
            },
            "resolution": {
              "how-to-fix-web": {
                "all": [],
                "any": [
                  "Element does not have an alt attribute",
                  "aria-label attribute does not exist or is empty",
                  "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                ],
                "none": [],
              },
              "howToFixSummary": "sample how to fix summary",
            },
            "ruleId": "image-alt",
            "status": "fail",
            "uid": "some-guid-here",
          },
        ],
        "url": "sample-url",
      }
    }
    targetAppInfo={
      {
        "name": "app",
      }
    }
    userConfigurationStoreData={null}
  />,
  "deps": {
    "collapsibleControl": [MockFunction] {
      "calls": [
        [
          [Circular],
        ],
      ],
      "results": [
        {
          "type": "return",
          "value": <mock-CardsCollapsibleControl
            buttonAriaLabel="5 Passed some-rule sample-description"
            containerAutomationId="cards-rule-group"
            containerClassName="collapsibleRuleDetailsGroup"
            content={
              <RuleContent
                cardSelectionMessageCreator={[typemoq mock object]}
                deps={[Circular]}
                outcomeType="pass"
                rule={
                  {
                    "description": "sample-description",
                    "guidance": [
                      {
                        "href": "sample-guidance-href",
                        "text": "sample-guidance-text",
                      },
                    ],
                    "id": "some-rule",
                    "nodes": [
                      {
                        "descriptors": {
                          "snippet": "this is a sample snippet",
                        },
                        "identifiers": {
                          "conciseName": "body img",
                          "css-selector": "body img",
                          "identifier": "body img",
                        },
                        "resolution": {
                          "how-to-fix-web": {
                            "all": [],
                            "any": [
                              "Element does not have an alt attribute",
                              "aria-label attribute does not exist or is empty",
                              "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                            ],
                            "none": [],
                          },
                          "howToFixSummary": "sample how to fix summary",
                        },
                        "ruleId": "image-alt",
                        "status": "fail",
                        "uid": "some-guid-here",
                      },
                    ],
                    "url": "sample-url",
                  }
                }
                targetAppInfo={
                  {
                    "name": "app",
                  }
                }
                userConfigurationStoreData={null}
              />
            }
            deps={[Circular]}
            header={
              <MinimalRuleHeader
                outcomeCounter={[Function]}
                outcomeType="pass"
                rule={
                  {
                    "description": "sample-description",
                    "guidance": [
                      {
                        "href": "sample-guidance-href",
                        "text": "sample-guidance-text",
                      },
                    ],
                    "id": "some-rule",
                    "nodes": [
                      {
                        "descriptors": {
                          "snippet": "this is a sample snippet",
                        },
                        "identifiers": {
                          "conciseName": "body img",
                          "css-selector": "body img",
                          "identifier": "body img",
                        },
                        "resolution": {
                          "how-to-fix-web": {
                            "all": [],
                            "any": [
                              "Element does not have an alt attribute",
                              "aria-label attribute does not exist or is empty",
                              "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                            ],
                            "none": [],
                          },
                          "howToFixSummary": "sample how to fix summary",
                        },
                        "ruleId": "image-alt",
                        "status": "fail",
                        "uid": "some-guid-here",
                      },
                    ],
                    "url": "sample-url",
                  }
                }
              />
            }
            headingLevel={5}
            id="some-rule"
            onExpandToggle={[Function]}
          />,
        },
      ],
    },
    "fixInstructionProcessor": [typemoq mock object],
  },
  "header": <MinimalRuleHeader
    outcomeCounter={[Function]}
    outcomeType="pass"
    rule={
      {
        "description": "sample-description",
        "guidance": [
          {
            "href": "sample-guidance-href",
            "text": "sample-guidance-text",
          },
        ],
        "id": "some-rule",
        "nodes": [
          {
            "descriptors": {
              "snippet": "this is a sample snippet",
            },
            "identifiers": {
              "conciseName": "body img",
              "css-selector": "body img",
              "identifier": "body img",
            },
            "resolution": {
              "how-to-fix-web": {
                "all": [],
                "any": [
                  "Element does not have an alt attribute",
                  "aria-label attribute does not exist or is empty",
                  "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                ],
                "none": [],
              },
              "howToFixSummary": "sample how to fix summary",
            },
            "ruleId": "image-alt",
            "status": "fail",
            "uid": "some-guid-here",
          },
        ],
        "url": "sample-url",
      }
    }
  />,
  "headingLevel": 5,
  "id": "some-rule",
  "isExpanded": undefined,
  "key": "summary-details-1",
  "onExpandToggle": [Function],
}
`;
