// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentPage .Markup <Column> renders 1`] = `
<DocumentFragment>
  <div
    class="column"
  >
    INSIDE COLUMN
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Columns> renders 1`] = `
<DocumentFragment>
  <div
    class="columns"
  >
    INSIDE COLUMNS
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Do> renders 1`] = `
<DocumentFragment>
  <div
    class="column"
  >
    <div
      class="do-header"
    >
      <h2>
        Do
      </h2>
      <mock-checkicon />
    </div>
    <div
      class="do-section"
    >
      THINGS TO DO
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Dont> renders 1`] = `
<DocumentFragment>
  <div
    class="column"
  >
    <div
      class="dont-header"
    >
      <h2>
        Don't
      </h2>
      <mock-crossicon />
    </div>
    <div
      class="dont-section"
    >
      DON'T DO THIS
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Fail> renders 1`] = `
<DocumentFragment>
  <div
    class="column"
  >
    <div
      class="fail-header"
    >
      <mock-crossicon />
       
      <h3>
        Fail
      </h3>
    </div>
    <div
      class="fail-section"
    >
      I FAILED :(
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Highlight> renders 1`] = `
<DocumentFragment>
  <span
    class="highlight"
  >
    HIGHLIGHTED
  </span>
</DocumentFragment>
`;

exports[`ContentPage .Markup <HyperLink> renders 1`] = `
<DocumentFragment>
  <mock-newtablink
    href="http://my.link"
  >
    LINK TEXT
  </mock-newtablink>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Include> renders 1`] = `
<DocumentFragment>
  <div>
    INCLUDE
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Inline> renders 1`] = `
<DocumentFragment>
  <div
    class="content-inline"
  >
    INLINED
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <LandmarkLegend> renders 1`] = `
<DocumentFragment>
  <span
    class="landmarks-legend main-landmark"
  >
    TEST
  </span>
</DocumentFragment>
`;

exports[`ContentPage .Markup <LandmarkLegend> renders 2`] = `
<DocumentFragment>
  <div
    class="column"
  >
    <div
      class="do-header"
    >
      <h2>
        Do
      </h2>
      <mock-checkicon />
    </div>
    <div
      class="do-section"
    >
      THINGS TO DO
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Links> renders with many links 1`] = `
<DocumentFragment>
  <div
    class="content-hyperlinks"
  >
    <mock-newtablink
      href="about:blank"
    >
      One
    </mock-newtablink>
    <mock-newtablink
      href="about:blank"
    >
      Two
    </mock-newtablink>
    <mock-newtablink
      href="about:blank"
    >
      Three
    </mock-newtablink>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Links> renders with one link 1`] = `
<DocumentFragment>
  <div
    class="content-hyperlinks"
  >
    <mock-newtablink
      href="about:blank"
    >
      One
    </mock-newtablink>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Links> renders with text 1`] = `
<DocumentFragment>
  <div
    class="content-hyperlinks"
  >
    Some text
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Pass> renders 1`] = `
<DocumentFragment>
  <div
    class="column"
  >
    <div
      class="pass-header"
    >
      <mock-checkicon />
       
      <h3>
        Pass
      </h3>
    </div>
    <div
      class="pass-section"
    >
      I PASSED :)
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <PassFail> renders with example headers 1`] = `
<DocumentFragment>
  <div
    class="pass-fail-grid"
  >
    <div
      class="fail-section"
    >
      <div
        class="fail-header"
      >
        <mock-crossicon />
         
        <h3>
          Fail
        </h3>
      </div>
      <p>
        I FAILED :(
      </p>
    </div>
    <div
      class="fail-example"
    >
      <div
        class="code-example"
      >
        <div
          class="code-example-title"
        >
          <h4>
            How I failed
          </h4>
        </div>
        <div
          class="code-example-code"
        >
          <div
            class="insights-code"
          >
            This is the failure 
            <span
              class="highlight"
            >
              example
            </span>
            .
          </div>
        </div>
      </div>
    </div>
    <div
      class="pass-section"
    >
      <div
        class="pass-header"
      >
        <mock-checkicon />
         
        <h3>
          Pass
        </h3>
      </div>
      <p>
        I PASSED!
      </p>
    </div>
    <div
      class="pass-example"
    >
      <div
        class="code-example"
      >
        <div
          class="code-example-title"
        >
          <h4>
            How I 
            <b>
              passed
            </b>
          </h4>
        </div>
        <div
          class="code-example-code"
        >
          <div
            class="insights-code"
          >
            This is the passing 
            <span
              class="highlight"
            >
              example
            </span>
            .
          </div>
        </div>
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <PassFail> renders without example headers 1`] = `
<DocumentFragment>
  <div
    class="pass-fail-grid"
  >
    <div
      class="fail-section"
    >
      <div
        class="fail-header"
      >
        <mock-crossicon />
         
        <h3>
          Fail
        </h3>
      </div>
      <p>
        I FAILED :(
      </p>
    </div>
    <div
      class="fail-example"
    >
      <div
        class="code-example"
      >
        <div
          class="code-example-code"
        >
          <div
            class="insights-code"
          >
            This is the failure 
            <span
              class="highlight"
            >
              example
            </span>
            .
          </div>
        </div>
      </div>
    </div>
    <div
      class="pass-section"
    >
      <div
        class="pass-header"
      >
        <mock-checkicon />
         
        <h3>
          Pass
        </h3>
      </div>
      <p>
        I PASSED!
      </p>
    </div>
    <div
      class="pass-example"
    >
      <div
        class="code-example"
      >
        <div
          class="code-example-code"
        >
          <div
            class="insights-code"
          >
            This is the passing 
            <span
              class="highlight"
            >
              example
            </span>
            .
          </div>
        </div>
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ContentPage .Markup <ProblemList> renders 1`] = `
<DocumentFragment>
  <ul
    class="accessibility-problems-list"
  >
    list content
  </ul>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Table> renders 1`] = `
<DocumentFragment>
  <ul
    class="table"
  >
    table content
  </ul>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Title> renders where options not specified 1`] = `
<DocumentFragment>
  <h1>
    TEST
  </h1>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === false 1`] = `
<DocumentFragment>
  <h1>
    TEST
  </h1>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === null 1`] = `
<DocumentFragment>
  <h1>
    TEST
  </h1>
</DocumentFragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === true 1`] = `
<DocumentFragment>
  <mock-helmet
    defer="true"
    encodespecialcharacters="true"
    prioritizeseotags="false"
  >
    <title>
      TEST - THE_APPLICATION_TITLE
    </title>
  </mock-helmet>
  <h1>
    TEST
  </h1>
</DocumentFragment>
`;
