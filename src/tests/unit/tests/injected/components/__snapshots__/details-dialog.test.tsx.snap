// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false} 1`] = `
<DocumentFragment>
  <mock-styledwithresponsivemode
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
    title="help"
  >
    <div
      class="insights-dialog-content"
    >
      <section
        aria-labelledby="rule-name"
        class="insights-dialog-rule-name"
      >
        <h3
          id="rule-name"
        >
          Rule name
        </h3>
        <mock-newtablink
          href="http://extension/help-relative"
        >
          ruleId
        </mock-newtablink>
      </section>
      <section
        aria-labelledby="success-criteria"
        class="insights-dialog-success-criteria"
      >
        <h3
          id="success-criteria"
        >
          Success criterion
        </h3>
        <div>
          <mock-guidancelinks
            links="[object Object]"
          />
        </div>
      </section>
      <section
        class="insights-dialog-path-selector-container"
      >
        <h3>
          Path
        </h3>
        ruleId
      </section>
      <mock-commandbar
        currentruleindex="0"
        deps="[object Object]"
        devtoolsshortcut="shortcut"
        failedrules="[object Object]"
        hassecuretargetpage="true"
        shouldshowinsecureoriginpagemessage="false"
      />
      <div
        class="insights-dialog-fix-instruction-container"
      >
        <mock-fixinstructionpanel
          checks=""
          checktype="0"
          deps="[object Object]"
        />
        <mock-fixinstructionpanel
          checks=""
          checktype="1"
          deps="[object Object]"
        />
      </div>
      <mock-issuedetailsnavigationcontrols
        container="[object Object]"
        dialoghandler="[object Object]"
        failurescount="1"
      />
    </div>
  </mock-styledwithresponsivemode>
</DocumentFragment>
`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false}: CommandBar props 1`] = `
{
  "currentRuleIndex": 0,
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "devToolsShortcut": "shortcut",
  "failedRules": {
    "ruleId": {
      "all": [],
      "any": [],
      "failureSummary": "failureSummary",
      "guidanceLinks": [
        {
          "href": "http://example.com",
          "text": "Guidance Link",
        },
      ],
      "help": "help",
      "helpUrl": "help-relative",
      "html": "html",
      "id": "id1",
      "none": [],
      "ruleId": "ruleId",
      "selector": "selector",
      "status": false,
    },
  },
  "hasSecureTargetPage": true,
  "onClickCopyIssueDetailsButton": [Function],
  "onClickInspectButton": [Function],
  "shouldShowInsecureOriginPageMessage": false,
  "shouldShowInspectButtonMessage": [Function],
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false}: FixInstructionPanel props 1`] = `
{
  "checkType": 0,
  "checks": [],
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "renderTitleElement": [Function],
}
`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false}: GuidanceLinks props 1`] = `
{
  "LinkComponent": undefined,
  "links": [
    {
      "href": "http://example.com",
      "text": "Guidance Link",
    },
  ],
}
`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false}: verify close button 1`] = `<CancelIcon />`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false} 1`] = `
<DocumentFragment>
  <mock-styledwithresponsivemode
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
    title="help"
  >
    <div
      class="insights-dialog-content"
    >
      <section
        aria-labelledby="rule-name"
        class="insights-dialog-rule-name"
      >
        <h3
          id="rule-name"
        >
          Rule name
        </h3>
        <mock-newtablink
          href="http://extension/help1"
        >
          ruleId
        </mock-newtablink>
      </section>
      <section
        aria-labelledby="success-criteria"
        class="insights-dialog-success-criteria"
      >
        <h3
          id="success-criteria"
        >
          Success criterion
        </h3>
        <div>
          <mock-guidancelinks
            links="[object Object]"
          />
        </div>
      </section>
      <section
        class="insights-dialog-path-selector-container"
      >
        <h3>
          Path
        </h3>
        ruleId
      </section>
      <mock-commandbar
        currentruleindex="0"
        deps="[object Object]"
        devtoolsshortcut="shortcut"
        failedrules="[object Object]"
        hassecuretargetpage="true"
        shouldshowinsecureoriginpagemessage="false"
      />
      <div
        class="insights-dialog-fix-instruction-container"
      >
        <mock-fixinstructionpanel
          checks=""
          checktype="0"
          deps="[object Object]"
        />
        <mock-fixinstructionpanel
          checks=""
          checktype="1"
          deps="[object Object]"
        />
      </div>
      <mock-issuedetailsnavigationcontrols
        container="[object Object]"
        dialoghandler="[object Object]"
        failurescount="1"
      />
    </div>
  </mock-styledwithresponsivemode>
</DocumentFragment>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false}: CommandBar props 1`] = `
{
  "currentRuleIndex": 0,
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "devToolsShortcut": "shortcut",
  "failedRules": {
    "ruleId": {
      "all": [],
      "any": [],
      "failureSummary": "failureSummary",
      "guidanceLinks": [
        {
          "href": "http://example.com",
          "text": "Guidance Link",
        },
      ],
      "help": "help",
      "helpUrl": "http://extension/help1",
      "html": "html",
      "id": "id1",
      "none": [],
      "ruleId": "ruleId",
      "selector": "selector",
      "status": false,
    },
  },
  "hasSecureTargetPage": true,
  "onClickCopyIssueDetailsButton": [Function],
  "onClickInspectButton": [Function],
  "shouldShowInsecureOriginPageMessage": false,
  "shouldShowInspectButtonMessage": [Function],
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false}: FixInstructionPanel props 1`] = `
{
  "checkType": 0,
  "checks": [],
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "renderTitleElement": [Function],
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false}: GuidanceLinks props 1`] = `
{
  "LinkComponent": undefined,
  "links": [
    {
      "href": "http://example.com",
      "text": "Guidance Link",
    },
  ],
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false}: verify close button 1`] = `<CancelIcon />`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true} 1`] = `
<DocumentFragment>
  <mock-styledwithresponsivemode
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
    title="help"
  >
    <div
      class="insights-dialog-content"
    >
      <section
        aria-labelledby="rule-name"
        class="insights-dialog-rule-name"
      >
        <h3
          id="rule-name"
        >
          Rule name
        </h3>
        <mock-newtablink
          href="http://extension/help1"
        >
          ruleId
        </mock-newtablink>
      </section>
      <section
        aria-labelledby="success-criteria"
        class="insights-dialog-success-criteria"
      >
        <h3
          id="success-criteria"
        >
          Success criterion
        </h3>
        <div>
          <mock-guidancelinks
            links="[object Object]"
          />
        </div>
      </section>
      <section
        class="insights-dialog-path-selector-container"
      >
        <h3>
          Path
        </h3>
        ruleId
      </section>
      <mock-commandbar
        currentruleindex="0"
        deps="[object Object]"
        devtoolsshortcut="shortcut"
        failedrules="[object Object]"
        hassecuretargetpage="true"
        shouldshowinsecureoriginpagemessage="false"
      />
      <div
        class="insights-dialog-fix-instruction-container"
      >
        <mock-fixinstructionpanel
          checks=""
          checktype="0"
          deps="[object Object]"
        />
        <mock-fixinstructionpanel
          checks=""
          checktype="1"
          deps="[object Object]"
        />
      </div>
      <mock-issuedetailsnavigationcontrols
        container="[object Object]"
        dialoghandler="[object Object]"
        failurescount="1"
      />
    </div>
  </mock-styledwithresponsivemode>
</DocumentFragment>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true}: CommandBar props 1`] = `
{
  "currentRuleIndex": 0,
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "devToolsShortcut": "shortcut",
  "failedRules": {
    "ruleId": {
      "all": [],
      "any": [],
      "failureSummary": "failureSummary",
      "guidanceLinks": [
        {
          "href": "http://example.com",
          "text": "Guidance Link",
        },
      ],
      "help": "help",
      "helpUrl": "http://extension/help1",
      "html": "html",
      "id": "id1",
      "none": [],
      "ruleId": "ruleId",
      "selector": "selector",
      "status": false,
    },
  },
  "hasSecureTargetPage": true,
  "onClickCopyIssueDetailsButton": [Function],
  "onClickInspectButton": [Function],
  "shouldShowInsecureOriginPageMessage": false,
  "shouldShowInspectButtonMessage": [Function],
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true}: FixInstructionPanel props 1`] = `
{
  "checkType": 0,
  "checks": [],
  "deps": {
    "browserAdapter": {
      "getUrl": [Function],
    },
    "issueDetailsTextGenerator": null,
    "issueFilingActionMessageCreator": null,
    "targetPageActionMessageCreator": {
      "copyIssueDetailsClicked": [Function],
    },
    "windowUtils": null,
  },
  "renderTitleElement": [Function],
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true}: GuidanceLinks props 1`] = `
{
  "LinkComponent": undefined,
  "links": [
    {
      "href": "http://example.com",
      "text": "Guidance Link",
    },
  ],
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true}: verify close button 1`] = `<CancelIcon />`;
