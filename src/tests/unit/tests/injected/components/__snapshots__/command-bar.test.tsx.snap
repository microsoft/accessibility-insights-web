// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommandBar renders renders, shows copy button insecure origin message: false 1`] = `
<div
  className="insights-dialog-target-button-container"
>
  <CustomizedDefaultButton
    className="insights-dialog-button-inspect"
  >
    <FileHTMLIcon />
    <div
      className="ms-Button-label"
    >
      Inspect HTML
    </div>
  </CustomizedDefaultButton>
  <React.Fragment>
    <CopyIssueDetailsButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
    />
    <IssueFilingButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
      needsSettingsContentRenderer={[Function]}
      userConfigurationStoreData={
        {
          "bugService": "None",
          "isFirstTime": false,
        }
      }
    />
  </React.Fragment>
</div>
`;

exports[`CommandBar renders renders, shows copy button insecure origin message: true 1`] = `
<div
  className="insights-dialog-target-button-container"
>
  <CustomizedDefaultButton
    className="insights-dialog-button-inspect"
  >
    <FileHTMLIcon />
    <div
      className="ms-Button-label"
    >
      Inspect HTML
    </div>
  </CustomizedDefaultButton>
  <React.Fragment>
    <CopyIssueDetailsButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
    />
    <IssueFilingButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
      needsSettingsContentRenderer={[Function]}
      userConfigurationStoreData={
        {
          "bugService": "None",
          "isFirstTime": false,
        }
      }
    />
  </React.Fragment>
  <div
    className="copy-issue-details-button-help"
    role="alert"
  >
    To copy failure details, first open the Accessibility Insights for Web page.
  </div>
</div>
`;

exports[`CommandBar renders renders, shows inspect button message: false 1`] = `
<div
  className="insights-dialog-target-button-container"
>
  <CustomizedDefaultButton
    className="insights-dialog-button-inspect"
  >
    <FileHTMLIcon />
    <div
      className="ms-Button-label"
    >
      Inspect HTML
    </div>
  </CustomizedDefaultButton>
  <React.Fragment>
    <CopyIssueDetailsButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
    />
    <IssueFilingButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
      needsSettingsContentRenderer={[Function]}
      userConfigurationStoreData={
        {
          "bugService": "None",
          "isFirstTime": false,
        }
      }
    />
  </React.Fragment>
</div>
`;

exports[`CommandBar renders renders, shows inspect button message: true 1`] = `
<div
  className="insights-dialog-target-button-container"
>
  <CustomizedDefaultButton
    className="insights-dialog-button-inspect"
  >
    <FileHTMLIcon />
    <div
      className="ms-Button-label"
    >
      Inspect HTML
    </div>
  </CustomizedDefaultButton>
  <React.Fragment>
    <CopyIssueDetailsButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
    />
    <IssueFilingButton
      deps={
        {
          "axeResultToIssueFilingDataConverter": [typemoq mock object],
        }
      }
      issueDetailsData={{}}
      needsSettingsContentRenderer={[Function]}
      userConfigurationStoreData={
        {
          "bugService": "None",
          "isFirstTime": false,
        }
      }
    />
  </React.Fragment>
  <div
    className="insights-dialog-inspect-disabled"
    role="alert"
  >
    To use the Inspect HTML button, first open the developer tools (dev-tools-shortcut).
  </div>
</div>
`;
