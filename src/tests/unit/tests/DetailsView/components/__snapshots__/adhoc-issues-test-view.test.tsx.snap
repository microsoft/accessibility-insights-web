// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdhocIssuesTestView should return DetailsListIssuesView 1`] = `
<div
  className="issuesTestView"
>
  <React.Fragment>
    <ScanIncompleteWarning
      deps={
        Object {
          "detailsViewActionMessageCreator": proxy {
            "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
            "addPathForValidation": [Function],
            "cancelStartOver": [Function],
            "cancelStartOverAllAssessments": [Function],
            "changeAssessmentVisualizationState": [Function],
            "changeManualRequirementStatus": [Function],
            "changeManualTestStatus": [Function],
            "clearPathSnippetData": [Function],
            "closePreviewFeaturesPanel": [Function],
            "closeScopingPanel": [Function],
            "closeSettingsPanel": [Function],
            "continuePreviousAssessment": [Function],
            "copyIssueDetailsClicked": [Function],
            "dispatcher": undefined,
            "editFailureInstance": [Function],
            "leftNavPanelExpanded": [Function],
            "loadAssessment": [Function],
            "removeFailureInstance": [Function],
            "rescanVisualization": [Function],
            "rescanVisualizationWithoutTelemetry": [Function],
            "saveAssessment": [Function],
            "setAllUrlsPermissionState": [Function],
            "setFeatureFlag": [Function],
            "startOverAllAssessments": [Function],
            "switchToTargetTab": [Function],
            "targetPageChangedResetData": [Function],
            "telemetryFactory": undefined,
            "undoManualRequirementStatusChange": [Function],
            "undoManualTestStatusChange": [Function],
          },
        }
      }
      test={-1}
      warningConfiguration={Object {}}
      warnings={Array []}
    />
    <DetailsListIssuesView
      clickHandlerFactory={
        proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "actionCreator": undefined,
          "telemetryFactory": undefined,
        }
      }
      configuration={
        Object {
          "displayableData": Object {
            "title": "test title",
          },
          "getStoreData": [Function],
        }
      }
      deps={
        Object {
          "detailsViewActionMessageCreator": proxy {
            "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
            "addPathForValidation": [Function],
            "cancelStartOver": [Function],
            "cancelStartOverAllAssessments": [Function],
            "changeAssessmentVisualizationState": [Function],
            "changeManualRequirementStatus": [Function],
            "changeManualTestStatus": [Function],
            "clearPathSnippetData": [Function],
            "closePreviewFeaturesPanel": [Function],
            "closeScopingPanel": [Function],
            "closeSettingsPanel": [Function],
            "continuePreviousAssessment": [Function],
            "copyIssueDetailsClicked": [Function],
            "dispatcher": undefined,
            "editFailureInstance": [Function],
            "leftNavPanelExpanded": [Function],
            "loadAssessment": [Function],
            "removeFailureInstance": [Function],
            "rescanVisualization": [Function],
            "rescanVisualizationWithoutTelemetry": [Function],
            "saveAssessment": [Function],
            "setAllUrlsPermissionState": [Function],
            "setFeatureFlag": [Function],
            "startOverAllAssessments": [Function],
            "switchToTargetTab": [Function],
            "targetPageChangedResetData": [Function],
            "telemetryFactory": undefined,
            "undoManualRequirementStatusChange": [Function],
            "undoManualTestStatusChange": [Function],
          },
        }
      }
      instancesSection={[Function]}
      scanIncompleteWarnings={Array []}
      selectedTest={-1}
      switcherNavConfiguration={
        Object {
          "warningConfiguration": Object {},
        }
      }
      tabStoreData={
        Object {
          "isChanged": false,
        }
      }
      visualizationStoreData={
        Object {
          "scanning": "test-scanning",
          "tests": Object {},
        }
      }
    />
  </React.Fragment>
</div>
`;

exports[`AdhocIssuesTestView should return target page changed view as tab is changed 1`] = `
<div
  className="issuesTestView"
>
  <TargetPageChangedView
    detailsViewActionMessageCreator={
      proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "targetPageChangedResetData": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      }
    }
    displayableData={
      Object {
        "title": "test title",
      }
    }
    toggleClickHandler={[Function]}
    visualizationType={-1}
  />
</div>
`;
