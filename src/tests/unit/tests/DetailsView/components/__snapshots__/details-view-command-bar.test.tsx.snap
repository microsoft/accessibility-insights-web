// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsViewCommandBar renders with buttons collapsed into a menu 1`] = `
"<div className="detailsViewCommandBar" role="region" aria-label="command bar">
  <div className="detailsViewTargetPage" aria-labelledby="switch-to-target">
    <span id="switch-to-target">
      Target page: 
    </span>
    <NewTabLinkWithTooltip tooltipContent="Switch to target page: command-bar-test-tab-title" role="link" className="targetPageLink" onClick={[Function: proxy]} aria-label="Switch to target page: command-bar-test-tab-title">
      <span className="targetPageTitle">
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <CommandBarButtonsMenu renderExportReportButton={[Function (anonymous)]} renderSaveAssessmentButton={[Function (anonymous)]} renderLoadAssessmentButton={[Function (anonymous)]} getStartOverMenuItem={[Function (anonymous)]} buttonRef={[Function: buttonRef]} />
  <InvalidLoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} onClose={[Function (anonymous)]} />
  <LoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} prevTab={{...}} loadedAssessmentData={{...}} tabId={5} onClose={[Function (anonymous)]} />
  <StartOverDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState="none" dismissDialog={[Function (anonymous)]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with export button and start over 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
    <div>
      Save assessment
    </div>
    <CustomizedActionButton>
      Start Over Component
    </CustomizedActionButton>
  </div>
  <div>
    Export dialog
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with export button, without start over 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
    <div>
      Save assessment
    </div>
  </div>
  <div>
    Export dialog
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with invalid load assessment dialog hidden 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with invalid load assessment dialog open 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={true}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with load assessment button 1`] = `
<InsightsCommandButton
  data-automation-id="load-assessment-button"
  iconProps={
    {
      "iconName": "FabricOpenFolderHorizontal",
    }
  }
>
  Load assessment
</InsightsCommandButton>
`;

exports[`DetailsViewCommandBar renders with load assessment dialog hidden 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with load assessment dialog open 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={true}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with report export dialog open 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders with save assessment button 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={true}
    modalProps={
      {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        tokens={
          {
            "childrenGap": 6,
          }
        }
        verticalAlign="center"
        wrap={true}
      >
        <StackItem
          disableShrink={true}
          grow={true}
        >
          <StyledCheckboxBase
            label="Don't show again"
            onChange={[Function]}
            value={false}
          />
        </StackItem>
        <StackItem
          grow={true}
        >
          <CustomizedPrimaryButton
            onClick={[Function]}
            text="Got it"
          />
        </StackItem>
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;

exports[`DetailsViewCommandBar renders with start assessment over dialog open 1`] = `
"<div className="detailsViewCommandBar" role="region" aria-label="command bar">
  <div className="detailsViewTargetPage" aria-labelledby="switch-to-target">
    <span id="switch-to-target">
      Target page: 
    </span>
    <NewTabLinkWithTooltip tooltipContent="Switch to target page: command-bar-test-tab-title" role="link" className="targetPageLink" onClick={[Function: proxy]} aria-label="Switch to target page: command-bar-test-tab-title">
      <span className="targetPageTitle">
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div className="detailsViewCommandButtons">
    <ReportExportButton showReportExportDialog={[Function (anonymous)]} buttonRef={[Function: buttonRef]} />
  </div>
  <InvalidLoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} onClose={[Function (anonymous)]} />
  <LoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} prevTab={{...}} loadedAssessmentData={{...}} tabId={5} onClose={[Function (anonymous)]} />
  <StartOverDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState="assessment" dismissDialog={[Function (anonymous)]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with start test over dialog open 1`] = `
"<div className="detailsViewCommandBar" role="region" aria-label="command bar">
  <div className="detailsViewTargetPage" aria-labelledby="switch-to-target">
    <span id="switch-to-target">
      Target page: 
    </span>
    <NewTabLinkWithTooltip tooltipContent="Switch to target page: command-bar-test-tab-title" role="link" className="targetPageLink" onClick={[Function: proxy]} aria-label="Switch to target page: command-bar-test-tab-title">
      <span className="targetPageTitle">
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div className="detailsViewCommandButtons">
    <ReportExportButton showReportExportDialog={[Function (anonymous)]} buttonRef={[Function: buttonRef]} />
  </div>
  <InvalidLoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} onClose={[Function (anonymous)]} />
  <LoadAssessmentDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} isOpen={false} prevTab={{...}} loadedAssessmentData={{...}} tabId={5} onClose={[Function (anonymous)]} />
  <StartOverDialog deps={{...}} assessmentStoreData={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState="test" dismissDialog={[Function (anonymous)]} />
</div>"
`;

exports[`DetailsViewCommandBar renders without export button and without start over 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <div>
      Save assessment
    </div>
  </div>
  <div>
    Export dialog
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;

exports[`DetailsViewCommandBar renders without export button, with start over 1`] = `
<div
  aria-label="command bar"
  className="detailsViewCommandBar"
  role="region"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <NewTabLinkWithTooltip
      aria-label="Switch to target page: command-bar-test-tab-title"
      className="targetPageLink"
      onClick={[Function]}
      role="link"
      tooltipContent="Switch to target page: command-bar-test-tab-title"
    >
      <span
        className="targetPageTitle"
      >
        command-bar-test-tab-title
      </span>
    </NewTabLinkWithTooltip>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <div>
      Save assessment
    </div>
    <CustomizedActionButton>
      Start Over Component
    </CustomizedActionButton>
  </div>
  <div>
    Export dialog
  </div>
  <InvalidLoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <LoadAssessmentDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    isOpen={false}
    loadedAssessmentData={null}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    onClose={[Function]}
    prevTab={
      {
        "detailsViewId": undefined,
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabId={5}
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
  <StartOverDialog
    assessmentStoreData={
      {
        "persistedTabInfo": {
          "detailsViewId": undefined,
          "id": 5,
          "isClosed": false,
          "title": "command-bar-test-tab-title",
        },
      }
    }
    deps={
      {
        "detailsViewActionMessageCreator": [typemoq mock object],
      }
    }
    dialogState="none"
    dismissDialog={[Function]}
    narrowModeStatus={
      {
        "isCommandBarCollapsed": false,
      }
    }
    scanMetadata={
      {
        "targetAppInfo": {
          "name": "command-bar-test-tab-title",
          "url": "command-bar-test-url",
        },
      }
    }
    switcherNavConfiguration={
      {
        "CommandBar": [Function],
        "LeftNav": [Function],
        "LoadAssessmentButton": [Function],
        "ReportExportDialogFactory": [Function],
        "SaveAssessmentButton": [Function],
        "StartOverComponentFactory": {
          "getStartOverComponent": [Function],
        },
        "shouldShowReportExportButton": [Function],
      }
    }
    tabStoreData={
      {
        "id": 5,
        "isClosed": false,
        "title": "command-bar-test-tab-title",
      }
    }
  />
</div>
`;
