// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReportExportComponentTest render 1`] = `
<React.Fragment>
  <InsightsCommandButton
    data-automation-id="export-report-command-bar-button"
    iconProps={
      Object {
        "iconName": "Export",
      }
    }
    onClick={[Function]}
  >
    Export result
  </InsightsCommandButton>
  <ExportDialog
    afterDismissed={[Function]}
    deps={
      Object {
        "reportGenerator": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "assessmentJsonExportGenerator": undefined,
          "assessmentReportHtmlGenerator": undefined,
          "reportHtmlGenerator": undefined,
          "reportNameGenerator": undefined,
        },
      }
    }
    description=""
    featureFlagStoreData={
      Object {
        "test-feature-flag": true,
      }
    }
    generateExports={[Function]}
    htmlExportData=""
    htmlFileName=""
    isOpen={false}
    jsonExportData=""
    jsonFileName=""
    onClose={[Function]}
    onDescriptionChange={[Function]}
    reportExportFormat="Assessment"
    reportExportServices={
      Array [
        Object {
          "generateMenuItem": null,
          "key": "html",
        },
      ]
    }
  />
</React.Fragment>
`;

exports[`ReportExportComponentTest user interactions click export button: dialog should show 1`] = `
<React.Fragment>
  <InsightsCommandButton
    data-automation-id="export-report-command-bar-button"
    iconProps={
      Object {
        "iconName": "Export",
      }
    }
    onClick={[Function]}
  >
    Export result
  </InsightsCommandButton>
  <ExportDialog
    afterDismissed={[Function]}
    deps={
      Object {
        "reportGenerator": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "assessmentJsonExportGenerator": undefined,
          "assessmentReportHtmlGenerator": undefined,
          "reportHtmlGenerator": undefined,
          "reportNameGenerator": undefined,
        },
      }
    }
    description="persisted description"
    featureFlagStoreData={
      Object {
        "test-feature-flag": true,
      }
    }
    generateExports={[Function]}
    htmlExportData=""
    isOpen={true}
    jsonExportData=""
    onClose={[Function]}
    onDescriptionChange={[Function]}
    reportExportFormat="Assessment"
    reportExportServices={
      Array [
        Object {
          "generateMenuItem": null,
          "key": "html",
        },
      ]
    }
  />
</React.Fragment>
`;

exports[`ReportExportComponentTest user interactions clicking export on the dialog should trigger generateExports with the current exportDescription 1`] = `
<React.Fragment>
  <InsightsCommandButton
    data-automation-id="export-report-command-bar-button"
    iconProps={
      Object {
        "iconName": "Export",
      }
    }
    onClick={[Function]}
  >
    Export result
  </InsightsCommandButton>
  <ExportDialog
    afterDismissed={[Function]}
    deps={
      Object {
        "reportGenerator": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "assessmentJsonExportGenerator": undefined,
          "assessmentReportHtmlGenerator": undefined,
          "reportHtmlGenerator": undefined,
          "reportNameGenerator": undefined,
        },
      }
    }
    description=""
    featureFlagStoreData={
      Object {
        "test-feature-flag": true,
      }
    }
    generateExports={[Function]}
    htmlExportData="test html"
    htmlFileName=""
    isOpen={false}
    jsonExportData="test json"
    jsonFileName=""
    onClose={[Function]}
    onDescriptionChange={[Function]}
    reportExportFormat="Assessment"
    reportExportServices={
      Array [
        Object {
          "generateMenuItem": null,
          "key": "html",
        },
      ]
    }
  />
</React.Fragment>
`;

exports[`ReportExportComponentTest user interactions dismiss dialog: dialog should be dismissed 1`] = `
<React.Fragment>
  <InsightsCommandButton
    data-automation-id="export-report-command-bar-button"
    iconProps={
      Object {
        "iconName": "Export",
      }
    }
    onClick={[Function]}
  >
    Export result
  </InsightsCommandButton>
  <ExportDialog
    afterDismissed={[Function]}
    deps={
      Object {
        "reportGenerator": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "assessmentJsonExportGenerator": undefined,
          "assessmentReportHtmlGenerator": undefined,
          "reportHtmlGenerator": undefined,
          "reportNameGenerator": undefined,
        },
      }
    }
    description=""
    featureFlagStoreData={
      Object {
        "test-feature-flag": true,
      }
    }
    generateExports={[Function]}
    htmlExportData=""
    isOpen={false}
    jsonExportData=""
    onClose={[Function]}
    onDescriptionChange={[Function]}
    reportExportFormat="Assessment"
    reportExportServices={
      Array [
        Object {
          "generateMenuItem": null,
          "key": "html",
        },
      ]
    }
  />
</React.Fragment>
`;

exports[`ReportExportComponentTest user interactions edit text field: test content with special characters: <> $ " \` ' 1`] = `
<React.Fragment>
  <InsightsCommandButton
    data-automation-id="export-report-command-bar-button"
    iconProps={
      Object {
        "iconName": "Export",
      }
    }
    onClick={[Function]}
  >
    Export result
  </InsightsCommandButton>
  <ExportDialog
    afterDismissed={[Function]}
    deps={
      Object {
        "reportGenerator": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "assessmentJsonExportGenerator": undefined,
          "assessmentReportHtmlGenerator": undefined,
          "reportHtmlGenerator": undefined,
          "reportNameGenerator": undefined,
        },
      }
    }
    description="test content with special characters: <> $ \\" \` '"
    featureFlagStoreData={
      Object {
        "test-feature-flag": true,
      }
    }
    generateExports={[Function]}
    htmlExportData=""
    htmlFileName=""
    isOpen={false}
    jsonExportData=""
    jsonFileName=""
    onClose={[Function]}
    onDescriptionChange={[Function]}
    reportExportFormat="Assessment"
    reportExportServices={
      Array [
        Object {
          "generateMenuItem": null,
          "key": "html",
        },
      ]
    }
  />
</React.Fragment>
`;
