// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TargetChangeDialog test sets for same prev tab and newTab values snapshot: render the only information available in prevTab is appRefreshed 1`] = `
<ChangeAssessmentDialog
  deps={
    Object {
      "detailsViewActionMessageCreator": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      },
      "urlParser": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
      },
    }
  }
  dialogContentTitle="Assessment in progress"
  dialogFirstText={
    <React.Fragment>
      Would you like to continue your current assessment on the new target of
       
      <StyledTooltipHostBase
        calloutProps={
          Object {
            "gapSpace": 0,
          }
        }
        content="https://www.abc.com"
        id="current-target-page-link"
      >
        <StyledLinkBase
          as="a"
          className="insights-link"
          onClick={[Function]}
          role="link"
          tabIndex={0}
        >
          test title 2
        </StyledLinkBase>
      </StyledTooltipHostBase>
      ?
    </React.Fragment>
  }
  dialogNoteText="If 'Continue previous' is selected, the previous assessment will be connected to this new page."
  dialogWarningText="If 'Start new' is selected, all previous progress will be lost."
  divId="target-change-dialog-description"
  isOpen={true}
  leftButtonOnClick={[Function]}
  leftButtonText="Continue previous"
  prevTab={
    Object {
      "appRefreshed": true,
    }
  }
  rightButtonDataAutomationId="target-change-start-new-button"
  rightButtonOnClick={[Function]}
  rightButtonStyle="restartButton"
  rightButtonText="Start new"
  subtitleAriaId="target-change-dialog-description"
/>
`;

exports[`TargetChangeDialog test sets for same prev tab and newTab values snapshot: render when previous tab info shows app is refreshed 1`] = `
<ChangeAssessmentDialog
  deps={
    Object {
      "detailsViewActionMessageCreator": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      },
      "urlParser": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
      },
    }
  }
  dialogContentTitle="Assessment in progress"
  dialogFirstText={
    <React.Fragment>
      Would you like to continue your current assessment on the new target of
       
      <StyledTooltipHostBase
        calloutProps={
          Object {
            "gapSpace": 0,
          }
        }
        content="https://www.def.com"
        id="current-target-page-link"
      >
        <StyledLinkBase
          as="a"
          className="insights-link"
          onClick={[Function]}
          role="link"
          tabIndex={0}
        >
          test title 2
        </StyledLinkBase>
      </StyledTooltipHostBase>
      ?
    </React.Fragment>
  }
  dialogNoteText="If 'Continue previous' is selected, the previous assessment will be connected to this new page."
  dialogWarningText="If 'Start new' is selected, all previous progress will be lost."
  divId="target-change-dialog-description"
  isOpen={true}
  leftButtonOnClick={[Function]}
  leftButtonText="Continue previous"
  prevTab={
    Object {
      "appRefreshed": true,
      "id": 111,
      "title": "test title 1",
      "url": "https://www.abc.com",
    }
  }
  rightButtonDataAutomationId="target-change-start-new-button"
  rightButtonOnClick={[Function]}
  rightButtonStyle="restartButton"
  rightButtonText="Start new"
  subtitleAriaId="target-change-dialog-description"
/>
`;

exports[`TargetChangeDialog test sets for same prev tab and newTab values snapshot: render when tab ids are same and also url doesn't change 1`] = `
<ChangeAssessmentDialog
  deps={
    Object {
      "detailsViewActionMessageCreator": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      },
      "urlParser": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
      },
    }
  }
  dialogContentTitle="Assessment in progress"
  dialogFirstText={
    <React.Fragment>
      Would you like to continue your current assessment on the new target of
       
      <StyledTooltipHostBase
        calloutProps={
          Object {
            "gapSpace": 0,
          }
        }
        content="https://www.abc.com"
        id="current-target-page-link"
      >
        <StyledLinkBase
          as="a"
          className="insights-link"
          onClick={[Function]}
          role="link"
          tabIndex={0}
        >
          test title 2
        </StyledLinkBase>
      </StyledTooltipHostBase>
      ?
    </React.Fragment>
  }
  dialogNoteText="If 'Continue previous' is selected, the previous assessment will be connected to this new page."
  dialogWarningText="If 'Start new' is selected, all previous progress will be lost."
  divId="target-change-dialog-description"
  isOpen={true}
  leftButtonOnClick={[Function]}
  leftButtonText="Continue previous"
  prevTab={
    Object {
      "appRefreshed": true,
      "id": 111,
      "title": "test title 1",
      "url": "https://www.abc.com",
    }
  }
  rightButtonDataAutomationId="target-change-start-new-button"
  rightButtonOnClick={[Function]}
  rightButtonStyle="restartButton"
  rightButtonText="Start new"
  subtitleAriaId="target-change-dialog-description"
/>
`;

exports[`TargetChangeDialog test sets for same prev tab and newTab values snapshot: render when tab ids are same but url changes 1`] = `
<ChangeAssessmentDialog
  deps={
    Object {
      "detailsViewActionMessageCreator": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      },
      "urlParser": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
      },
    }
  }
  dialogContentTitle="Assessment in progress"
  dialogFirstText={
    <React.Fragment>
      Would you like to continue your current assessment on the new target of
       
      <StyledTooltipHostBase
        calloutProps={
          Object {
            "gapSpace": 0,
          }
        }
        content="https://www.def.com"
        id="current-target-page-link"
      >
        <StyledLinkBase
          as="a"
          className="insights-link"
          onClick={[Function]}
          role="link"
          tabIndex={0}
        >
          test title 2
        </StyledLinkBase>
      </StyledTooltipHostBase>
      ?
    </React.Fragment>
  }
  dialogNoteText="If 'Continue previous' is selected, the previous assessment will be connected to this new page."
  dialogWarningText="If 'Start new' is selected, all previous progress will be lost."
  divId="target-change-dialog-description"
  isOpen={true}
  leftButtonOnClick={[Function]}
  leftButtonText="Continue previous"
  prevTab={
    Object {
      "appRefreshed": false,
      "id": 111,
      "title": "test title 1",
      "url": "https://www.abc.com",
    }
  }
  rightButtonDataAutomationId="target-change-start-new-button"
  rightButtonOnClick={[Function]}
  rightButtonStyle="restartButton"
  rightButtonText="Start new"
  subtitleAriaId="target-change-dialog-description"
/>
`;

exports[`TargetChangeDialog test sets for same prev tab and newTab values snapshot: render when target tab id changed 1`] = `
<ChangeAssessmentDialog
  deps={
    Object {
      "detailsViewActionMessageCreator": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        "addPathForValidation": [Function],
        "cancelStartOver": [Function],
        "cancelStartOverAllAssessments": [Function],
        "changeAssessmentVisualizationState": [Function],
        "changeManualRequirementStatus": [Function],
        "changeManualTestStatus": [Function],
        "clearPathSnippetData": [Function],
        "closePreviewFeaturesPanel": [Function],
        "closeScopingPanel": [Function],
        "closeSettingsPanel": [Function],
        "continuePreviousAssessment": [Function],
        "copyIssueDetailsClicked": [Function],
        "dispatcher": undefined,
        "editFailureInstance": [Function],
        "leftNavPanelExpanded": [Function],
        "loadAssessment": [Function],
        "removeFailureInstance": [Function],
        "rescanVisualization": [Function],
        "rescanVisualizationWithoutTelemetry": [Function],
        "saveAssessment": [Function],
        "setAllUrlsPermissionState": [Function],
        "setFeatureFlag": [Function],
        "startOverAllAssessments": [Function],
        "switchToTargetTab": [Function],
        "telemetryFactory": undefined,
        "undoManualRequirementStatusChange": [Function],
        "undoManualTestStatusChange": [Function],
      },
      "urlParser": proxy {
        "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
      },
    }
  }
  dialogContentTitle="Assessment in progress"
  dialogFirstText={
    <React.Fragment>
      Would you like to continue your current assessment on the new target of
       
      <StyledTooltipHostBase
        calloutProps={
          Object {
            "gapSpace": 0,
          }
        }
        content="https://www.def.com"
        id="current-target-page-link"
      >
        <StyledLinkBase
          as="a"
          className="insights-link"
          onClick={[Function]}
          role="link"
          tabIndex={0}
        >
          test title 2
        </StyledLinkBase>
      </StyledTooltipHostBase>
      ?
    </React.Fragment>
  }
  dialogNoteText="If 'Continue previous' is selected, the previous assessment will be connected to this new page."
  dialogWarningText="If 'Start new' is selected, all previous progress will be lost."
  divId="target-change-dialog-description"
  isOpen={true}
  leftButtonOnClick={[Function]}
  leftButtonText="Continue previous"
  prevTab={
    Object {
      "appRefreshed": false,
      "id": 111,
      "title": "test title 1",
      "url": "https://www.abc.com",
    }
  }
  rightButtonDataAutomationId="target-change-start-new-button"
  rightButtonOnClick={[Function]}
  rightButtonStyle="restartButton"
  rightButtonText="Start new"
  subtitleAriaId="target-change-dialog-description"
/>
`;
