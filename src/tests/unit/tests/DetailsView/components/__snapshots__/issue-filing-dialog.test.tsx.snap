// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IssueFilingDialog componentDidUpdate dialog is not open & props have changed 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={true}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "someServiceData": null,
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog componentDidUpdate dialog is not open & props have not changed 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={true}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "differentProperty": "different_property",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog componentDidUpdate dialog is open & props have changed 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "differentProperty": "different_property",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog componentDidUpdate dialog is open & props have not changed 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "differentProperty": "different_property",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog render with isSettingsValid: false 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "someServiceData": null,
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={true}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog render with isSettingsValid: true 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "someServiceData": null,
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog render: validate callback (onPropertyUpdateCallback) sent to settings container when service settings are not null 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "someServiceData": null,
        "some_property": "some_value",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog render: validate callback (onPropertyUpdateCallback) sent to settings container when service settings are null 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "gitHub",
      }
    }
    selectedIssueFilingServiceData={
      {
        "some_property": "some_value",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;

exports[`IssueFilingDialog render: validate callback (onSelectedServiceChange) sent to settings container 1`] = `
<Dialog
  dialogContentProps={
    {
      "showCloseButton": false,
      "subText": "This configuration can be changed again in settings.",
      "title": "Specify issue filing location",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    {
      "className": "issueFilingDialog",
      "containerClassName": "insightsDialogMainOverride",
      "isBlocking": false,
      "onDismissed": [Function],
    }
  }
  onDismiss={[Function]}
>
  <IssueFilingSettingsContainer
    deps={
      {
        "issueFilingActionMessageCreator": [typemoq mock object],
        "issueFilingServiceProvider": [typemoq mock object],
        "toolData": {
          "applicationProperties": {
            "environmentName": "environmentName",
            "name": "app-name",
            "version": "app-version",
          },
          "scanEngineProperties": {
            "name": "engine-name",
            "version": "engine-version",
          },
        },
        "userConfigMessageCreator": [typemoq mock object],
      }
    }
    onPropertyUpdateCallback={[Function]}
    onSelectedServiceChange={[Function]}
    selectedIssueFilingService={
      {
        "getSettingsFromStoreData": [Function],
        "isSettingsValid": [Function],
        "key": "different_service",
      }
    }
    selectedIssueFilingServiceData={
      {
        "differentProperty": "different_property",
      }
    }
  />
  <StyledDialogFooterBase>
    <ActionAndCancelButtonsComponent
      cancelButtonOnClick={[Function]}
      isHidden={false}
      primaryButtonDisabled={false}
      primaryButtonOnClick={[Function]}
      primaryButtonText="File issue"
    />
  </StyledDialogFooterBase>
</Dialog>
`;
