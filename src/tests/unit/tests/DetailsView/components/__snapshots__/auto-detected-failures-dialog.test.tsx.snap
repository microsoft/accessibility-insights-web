// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutoDetectedFailuresDialog on componentDidUpdate does not display dialog when dialog is disabled 1`] = `
<body>
  <div />
  <div />
</body>
`;

exports[`AutoDetectedFailuresDialog on dialog enabled box appears checked when "dont show again" box is clicked 1`] = `
<body>
  <div>
    <mock-styledwithresponsivemode
      dialogcontentprops="[object Object]"
      hidden="false"
      modalprops="[object Object]"
    >
      <div
        class="dialogBody"
      >
        <ul>
          <li>
            Review each finding to be sure it's valid
          </li>
          <li>
            Add any more failures you discovered manually
          </li>
        </ul>
      </div>
      <mock-styleddialogfooterbase>
        <mock-stack
          horizontal="true"
          horizontalalign="space-between"
          tokens="[object Object]"
          verticalalign="center"
          wrap="true"
        >
          <mock-stackitem
            disableshrink="true"
            grow="true"
          >
            <mock-styledcheckboxbase
              checked="true"
              label="Don't show again"
            />
          </mock-stackitem>
          <mock-stackitem
            grow="true"
          >
            <mock-customizedprimarybutton
              text="Got it"
            />
          </mock-stackitem>
        </mock-stack>
      </mock-styleddialogfooterbase>
    </mock-styledwithresponsivemode>
  </div>
</body>
`;

exports[`AutoDetectedFailuresDialog on dialog enabled is dismissed when "got it" button is clicked 1`] = `
<body>
  <div />
</body>
`;

exports[`AutoDetectedFailuresDialog on dialog enabled is dismissed when onDismiss is called 1`] = `
<body>
  <div />
</body>
`;

exports[`AutoDetectedFailuresDialog on dialog enabled nothing happens when checkbox change is undefined 1`] = `
<body>
  <div>
    <mock-styledwithresponsivemode
      dialogcontentprops="[object Object]"
      hidden="false"
      modalprops="[object Object]"
    >
      <div
        class="dialogBody"
      >
        <ul>
          <li>
            Review each finding to be sure it's valid
          </li>
          <li>
            Add any more failures you discovered manually
          </li>
        </ul>
      </div>
      <mock-styleddialogfooterbase>
        <mock-stack
          horizontal="true"
          horizontalalign="space-between"
          tokens="[object Object]"
          verticalalign="center"
          wrap="true"
        >
          <mock-stackitem
            disableshrink="true"
            grow="true"
          >
            <mock-styledcheckboxbase
              checked="false"
              label="Don't show again"
            />
          </mock-stackitem>
          <mock-stackitem
            grow="true"
          >
            <mock-customizedprimarybutton
              text="Got it"
            />
          </mock-stackitem>
        </mock-stack>
      </mock-styleddialogfooterbase>
    </mock-styledwithresponsivemode>
  </div>
</body>
`;

exports[`AutoDetectedFailuresDialog on dialog enabled renders when dialog is enabled 1`] = `
<body>
  <div>
    <mock-styledwithresponsivemode
      dialogcontentprops="[object Object]"
      hidden="false"
      modalprops="[object Object]"
    >
      <div
        class="dialogBody"
      >
        <ul>
          <li>
            Review each finding to be sure it's valid
          </li>
          <li>
            Add any more failures you discovered manually
          </li>
        </ul>
      </div>
      <mock-styleddialogfooterbase>
        <mock-stack
          horizontal="true"
          horizontalalign="space-between"
          tokens="[object Object]"
          verticalalign="center"
          wrap="true"
        >
          <mock-stackitem
            disableshrink="true"
            grow="true"
          >
            <mock-styledcheckboxbase
              checked="false"
              label="Don't show again"
            />
          </mock-stackitem>
          <mock-stackitem
            grow="true"
          >
            <mock-customizedprimarybutton
              text="Got it"
            />
          </mock-stackitem>
        </mock-stack>
      </mock-styleddialogfooterbase>
    </mock-styledwithresponsivemode>
  </div>
</body>
`;

exports[`AutoDetectedFailuresDialog renders when dialog is not enabled 1`] = `<DocumentFragment />`;
