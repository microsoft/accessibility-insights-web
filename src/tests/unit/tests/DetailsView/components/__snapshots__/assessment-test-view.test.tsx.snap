// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssessmentTestView renders with a GettingStartedView when a Getting started item is selected 1`] = `
<DocumentFragment>
  <mock-bannerwarnings
    deps="[object Object]"
    test="-1"
    visualizationstoredata="[object Object]"
    warningconfiguration="[object Object]"
  />
  <mock-targetchangedialog
    deps="[object Object]"
    newtab="[object Object]"
  />
  <mock-gettingstartedview
    assessment="[object Object]"
    deps="[object Object]"
  />
</DocumentFragment>
`;

exports[`AssessmentTestView renders with a GettingStartedView when a Getting started item is selected: BannerWarnings props 1`] = `
{
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
  "test": -1,
  "visualizationStoreData": {
    "scanning": "test-scanning",
    "tests": {},
  },
  "warningConfiguration": {},
  "warnings": undefined,
}
`;

exports[`AssessmentTestView renders with a GettingStartedView when a Getting started item is selected: GettingStartedView props 1`] = `
{
  "assessment": {},
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
}
`;

exports[`AssessmentTestView renders with a GettingStartedView when a Getting started item is selected: TargetChangeDialog props 1`] = `
{
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
  "newTab": {
    "id": -2,
    "title": "test title",
    "url": "test url",
  },
  "prevTab": undefined,
}
`;

exports[`AssessmentTestView renders with a RequirementView when a requirement is selected 1`] = `
<DocumentFragment>
  <mock-bannerwarnings
    deps="[object Object]"
    test="-1"
    visualizationstoredata="[object Object]"
    warningconfiguration="[object Object]"
  />
  <mock-targetchangedialog
    deps="[object Object]"
    newtab="[object Object]"
  />
  <mock-requirementview
    assessmentdata="[object Object]"
    assessmentinstancetablehandler="[object Object]"
    assessmentnavstate="[object Object]"
    currenttarget="[object Object]"
    deps="[object Object]"
    featureflagstoredata="[object Object]"
    isrequirementenabled="false"
    pathsnippetstoredata="[object Object]"
    requirementviewcomponentconfiguration="[object Object]"
    scanninginprogress="true"
  />
</DocumentFragment>
`;

exports[`AssessmentTestView renders with a RequirementView when a requirement is selected: BannerWarnings props 1`] = `
{
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
  "test": -1,
  "visualizationStoreData": {
    "scanning": "test-scanning",
    "tests": {},
  },
  "warningConfiguration": {},
  "warnings": undefined,
}
`;

exports[`AssessmentTestView renders with a RequirementView when a requirement is selected: RequirementView props 1`] = `
{
  "assessmentData": {},
  "assessmentInstanceTableHandler": {},
  "assessmentNavState": {
    "selectedTestSubview": "step",
    "selectedTestType": -1,
  },
  "currentTarget": {
    "id": -2,
    "title": "test title",
    "url": "test url",
  },
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
  "featureFlagStoreData": {},
  "isRequirementEnabled": false,
  "pathSnippetStoreData": {},
  "prevTarget": undefined,
  "requirementViewComponentConfiguration": {},
  "scanningInProgress": true,
}
`;

exports[`AssessmentTestView renders with a RequirementView when a requirement is selected: TargetChangeDialog props 1`] = `
{
  "deps": {
    "getAssessmentActionMessageCreator": [Function],
    "getProvider": [Function],
  },
  "newTab": {
    "id": -2,
    "title": "test title",
    "url": "test url",
  },
  "prevTab": undefined,
}
`;
