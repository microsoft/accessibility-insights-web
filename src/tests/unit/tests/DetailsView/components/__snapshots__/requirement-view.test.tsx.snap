// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RequirementViewTest renders with content from props 1`] = `
<div
  className="requirementView"
>
  <div>
    <RequirementViewTitle
      deps={
        Object {
          "assessmentViewUpdateHandler": [typemoq mock object],
          "assessmentsProvider": [typemoq mock object],
        }
      }
      name="test-requirement-name"
    />
    <div
      className="mainContent"
    >
      <div>
        test-description
      </div>
      <div>
        test-visual-helper-toggle
      </div>
      <RequirementInstructions
        howToTest={
          <p>
            how-to-test-stub
          </p>
        }
      />
      <RequirementTableSection
        assessmentInstanceTableHandler={
          Object {
            "changeRequirementStatus": null,
          }
        }
        assessmentNavState={
          Object {
            "selectedTestSubview": "test-requirement-name",
            "selectedTestType": 0,
          }
        }
        assessmentsProvider={[typemoq mock object]}
        featureFlagStoreData={
          Object {
            "some feature flag": true,
          }
        }
        instancesMap={Object {}}
        isRequirementScanned={true}
        manualRequirementResultMap={
          Object {
            "some manual test step result id": null,
          }
        }
        pathSnippetStoreData={
          Object {
            "path": null,
          }
        }
        requirement={
          Object {
            "description": <div>
              test-description
            </div>,
            "getVisualHelperToggle": [Function],
            "howToTest": <p>
              how-to-test-stub
            </p>,
            "key": "test-requirement-key",
            "name": "test-requirement-name",
          }
        }
        selectedRequirementHasVisualHelper={true}
      />
    </div>
  </div>
  <div
    className="nextRequirementButtonContainer"
  >
    <NextRequirementButton
      className="nextRequirementButton"
      currentTest={0}
      deps={
        Object {
          "assessmentViewUpdateHandler": [typemoq mock object],
          "assessmentsProvider": [typemoq mock object],
        }
      }
      nextRequirement={
        Object {
          "key": "other-requirement-key",
        }
      }
    />
  </div>
</div>
`;
