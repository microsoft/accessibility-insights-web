// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SaveAssessmentButton on dialog disabled saves assessment without dialog 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      Object {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      Object {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={true}
    modalProps={
      Object {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        verticalAlign="center"
      >
        <StyledCheckboxBase
          label="Don't show again"
          onChange={[Function]}
          value={true}
        />
        <CustomizedPrimaryButton
          onClick={[Function]}
          text="Got it"
        />
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;

exports[`SaveAssessmentButton on dialog enabled box appears checked when "dont show again" box is clicked 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      Object {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      Object {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={false}
    modalProps={
      Object {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        verticalAlign="center"
      >
        <StyledCheckboxBase
          label="Don't show again"
          onChange={[Function]}
          value={true}
        />
        <CustomizedPrimaryButton
          onClick={[Function]}
          text="Got it"
        />
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;

exports[`SaveAssessmentButton on dialog enabled is dismissed when "got it" button is clicked 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      Object {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      Object {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={true}
    modalProps={
      Object {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        verticalAlign="center"
      >
        <StyledCheckboxBase
          label="Don't show again"
          onChange={[Function]}
          value={false}
        />
        <CustomizedPrimaryButton
          onClick={[Function]}
          text="Got it"
        />
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;

exports[`SaveAssessmentButton on dialog enabled is dismissed when onDismiss is called 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      Object {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      Object {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={true}
    modalProps={
      Object {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        verticalAlign="center"
      >
        <StyledCheckboxBase
          label="Don't show again"
          onChange={[Function]}
          value={false}
        />
        <CustomizedPrimaryButton
          onClick={[Function]}
          text="Got it"
        />
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;

exports[`SaveAssessmentButton on dialog enabled renders when dialog is enabled 1`] = `
<React.Fragment>
  <InsightsCommandButton
    download="download"
    href="url"
    iconProps={
      Object {
        "iconName": "Save",
      }
    }
    onClick={[Function]}
  >
    Save assessment
  </InsightsCommandButton>
  <Dialog
    dialogContentProps={
      Object {
        "title": "Assessment saved",
        "type": 0,
      }
    }
    hidden={false}
    modalProps={
      Object {
        "containerClassName": "insightsDialogMainOverride",
        "isBlocking": false,
      }
    }
    onDismiss={[Function]}
  >
    <div
      className="dialogBody"
    >
      To load this assessment, use the 
      <strong>
        Load assessment
      </strong>
       button in the Accessibility Insights Assessment command bar.
    </div>
    <StyledDialogFooterBase>
      <Stack
        horizontal={true}
        horizontalAlign="space-between"
        verticalAlign="center"
      >
        <StyledCheckboxBase
          label="Don't show again"
          onChange={[Function]}
          value={false}
        />
        <CustomizedPrimaryButton
          onClick={[Function]}
          text="Got it"
        />
      </Stack>
    </StyledDialogFooterBase>
  </Dialog>
</React.Fragment>
`;
