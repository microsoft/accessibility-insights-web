// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabStopsRequirementsTable renders requirement column 1`] = `
<span
  className="requirementColumn"
>
  <span
    className="requirementName"
  >
    test name
  </span>
  :
   
  test description
</span>
`;

exports[`TabStopsRequirementsTable renders requirement column 2`] = `
[
  {
    "key": "requirement",
    "minWidth": 100,
    "name": "Requirement",
    "onRender": [Function],
  },
  {
    "className": "passFailColumnCell",
    "key": "result",
    "maxWidth": 124,
    "minWidth": 124,
    "name": "Pass / Fail",
    "onRender": [Function],
  },
]
`;

exports[`TabStopsRequirementsTable renders result column 1`] = `NodeList []`;

exports[`TabStopsRequirementsTable renders table 1`] = `
<DocumentFragment>
  <mock-styledwithviewportcomponent
    checkboxvisibility="2"
    classname="requirementTable"
    columns="[object Object],[object Object]"
    items="[object Object],[object Object],[object Object],[object Object],[object Object]"
  />
</DocumentFragment>
`;

exports[`TabStopsRequirementsTable renders undo icon button 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <mock-styledwithviewportcomponent
        checkboxvisibility="2"
        classname="requirementTable"
        columns="[object Object],[object Object]"
        items="[object Object],[object Object],[object Object],[object Object],[object Object]"
      />
    </div>
  </body>,
  "container": <div>
    <mock-styledwithviewportcomponent
      checkboxvisibility="2"
      classname="requirementTable"
      columns="[object Object],[object Object]"
      items="[object Object],[object Object],[object Object],[object Object],[object Object]"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
