// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabStopsInstanceSectionPropsFactory for Fastpass creates props as expected 1`] = `
{
  "deps": {
    "tabStopRequirementActionMessageCreator": [typemoq mock object],
    "tabStopsTestViewController": [typemoq mock object],
  },
  "getCollapsibleComponentPropsWithInstance": [Function],
  "headingLevel": 3,
  "results": [
    {
      "description": "test requirement description 1",
      "id": "keyboard-navigation",
      "instances": [
        {
          "description": "test desc 1",
          "id": "test-id-1",
        },
        {
          "description": "test desc 2",
          "id": "test-id-2",
        },
      ],
      "isExpanded": false,
      "name": "test requirement name 1",
    },
    {
      "description": "test requirement description 2",
      "id": "keyboard-traps",
      "instances": [
        {
          "description": "test desc 3",
          "id": "test-id-3",
        },
      ],
      "isExpanded": false,
      "name": "test requirement name 2",
    },
  ],
  "tabStopRequirementState": {
    "keyboard-navigation": {
      "instances": [
        {
          "description": "test desc 1",
          "id": "test-id-1",
        },
      ],
      "isExpanded": false,
      "status": "fail",
    },
    "keyboard-traps": {
      "instances": [
        {
          "description": "test desc 2",
          "id": "test-id-2",
        },
      ],
      "isExpanded": false,
      "status": "fail",
    },
  },
}
`;

exports[`TabStopsInstanceSectionPropsFactory for Fastpass creates props as expected 2`] = `
{
  "buttonAriaLabel": "label",
  "containerAutomationId": "tab-stops-results-group",
  "containerClassName": "collapsibleRequirementDetailsGroup",
  "content": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": "keyboard-navigation-requirement-group",
    "props": {
      "instances": [
        {
          "description": "test desc 1",
          "id": "test-id-1",
        },
        {
          "description": "test desc 2",
          "id": "test-id-2",
        },
      ],
      "onEditButtonClicked": [Function],
      "onRemoveButtonClicked": [Function],
      "requirementId": "keyboard-navigation",
    },
    "type": [Function],
  },
  "deps": {
    "tabStopRequirementActionMessageCreator": [typemoq mock object],
    "tabStopsTestViewController": [typemoq mock object],
  },
  "header": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": "keyboard-navigation",
    "props": {
      "deps": {
        "tabStopRequirementActionMessageCreator": [typemoq mock object],
        "tabStopsTestViewController": [typemoq mock object],
      },
      "requirement": {
        "description": "test requirement description 1",
        "id": "keyboard-navigation",
        "instances": [
          {
            "description": "test desc 1",
            "id": "test-id-1",
          },
          {
            "description": "test desc 2",
            "id": "test-id-2",
          },
        ],
        "isExpanded": false,
        "name": "test requirement name 1",
      },
    },
    "type": [Function],
  },
  "headingLevel": 3,
  "id": "keyboard-navigation",
  "isExpanded": false,
  "key": "summary-details-1",
  "onExpandToggle": [Function],
}
`;

exports[`TabStopsInstanceSectionPropsFactory for Report creates props as expected 1`] = `
{
  "deps": {
    "tabStopRequirementActionMessageCreator": [typemoq mock object],
    "tabStopsTestViewController": [typemoq mock object],
  },
  "getCollapsibleComponentPropsWithInstance": [Function],
  "getCollapsibleComponentPropsWithoutInstance": [Function],
  "headingLevel": 3,
  "results": [
    {
      "description": "test requirement description 1",
      "id": "keyboard-navigation",
      "instances": [
        {
          "description": "test desc 1",
          "id": "test-id-1",
        },
        {
          "description": "test desc 2",
          "id": "test-id-2",
        },
      ],
      "isExpanded": false,
      "name": "test requirement name 1",
    },
    {
      "description": "test requirement description 2",
      "id": "keyboard-traps",
      "instances": [
        {
          "description": "test desc 3",
          "id": "test-id-3",
        },
      ],
      "isExpanded": false,
      "name": "test requirement name 2",
    },
  ],
  "tabStopRequirementState": {
    "keyboard-navigation": {
      "instances": [
        {
          "description": "test desc 1",
          "id": "test-id-1",
        },
      ],
      "isExpanded": false,
      "status": "fail",
    },
    "keyboard-traps": {
      "instances": [
        {
          "description": "test desc 2",
          "id": "test-id-2",
        },
      ],
      "isExpanded": false,
      "status": "fail",
    },
  },
}
`;

exports[`TabStopsInstanceSectionPropsFactory for Report creates props as expected 2`] = `
{
  "buttonAriaLabel": "label",
  "containerAutomationId": "tab-stops-results-group",
  "containerClassName": "collapsibleRequirementDetailsGroup",
  "content": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": "keyboard-navigation-requirement-group",
    "props": {
      "instances": [
        {
          "props": [
            {
              "key": "Comment",
              "value": "test desc 1",
            },
            {
              "key": "Comment",
              "value": "test desc 2",
            },
          ],
        },
      ],
    },
    "type": [Function],
  },
  "deps": {
    "tabStopRequirementActionMessageCreator": [typemoq mock object],
    "tabStopsTestViewController": [typemoq mock object],
  },
  "header": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": "keyboard-navigation",
    "props": {
      "deps": {
        "tabStopRequirementActionMessageCreator": [typemoq mock object],
        "tabStopsTestViewController": [typemoq mock object],
      },
      "requirement": {
        "description": "test requirement description 1",
        "id": "keyboard-navigation",
        "instances": [
          {
            "description": "test desc 1",
            "id": "test-id-1",
          },
          {
            "description": "test desc 2",
            "id": "test-id-2",
          },
        ],
        "isExpanded": false,
        "name": "test requirement name 1",
      },
    },
    "type": [Function],
  },
  "headingLevel": 3,
  "id": "keyboard-navigation",
  "isExpanded": false,
  "key": "summary-details-1",
  "onExpandToggle": [Function],
}
`;

exports[`TabStopsInstanceSectionPropsFactory for Report creates props as expected 3`] = `
{
  "buttonAriaLabel": "label",
  "containerAutomationId": "tab-stops-results-group",
  "containerClassName": "collapsibleRequirementDetailsGroup",
  "content": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": null,
    "props": {
      "children": "This requirement has failed but no comment has been added",
      "className": "noInstances",
    },
    "type": "span",
  },
  "deps": {
    "tabStopRequirementActionMessageCreator": [typemoq mock object],
    "tabStopsTestViewController": [typemoq mock object],
  },
  "header": {
    "$$typeof": Symbol(react.transitional.element),
    "_owner": null,
    "_store": {},
    "key": "keyboard-navigation",
    "props": {
      "deps": {
        "tabStopRequirementActionMessageCreator": [typemoq mock object],
        "tabStopsTestViewController": [typemoq mock object],
      },
      "requirement": {
        "description": "test requirement description 1",
        "id": "keyboard-navigation",
        "instances": [
          {
            "description": "test desc 1",
            "id": "test-id-1",
          },
          {
            "description": "test desc 2",
            "id": "test-id-2",
          },
        ],
        "isExpanded": false,
        "name": "test requirement name 1",
      },
    },
    "type": [Function],
  },
  "headingLevel": 3,
  "id": "keyboard-navigation",
  "isExpanded": false,
  "key": "summary-details-1",
  "onExpandToggle": [Function],
}
`;
