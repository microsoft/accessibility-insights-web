# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
parameters:
    - name: templateType
      type: string
      default: UnOfficial
      values:
          - UnOfficial
          - Official

resources:
    repositories:
        - repository: 1esPipelines
          type: git
          name: 1ESPipelineTemplates/1ESPipelineTemplates
          ref: refs/tags/release

extends:
    ${{ if eq(parameters.templateType, 'Official') }}:
        template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
    ${{ else }}:
        template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
    parameters:
        pool:
            name: $(a11yInsightsPool) # Name of your hosted pool
            image: windows-2022-secure # Name of the image in your pool. If not specified, first image of the pool is used
            os: windows

        stages:
            - stage: Stage

              jobs:
                  - job: 'unit_tests_and_lints'

                    pool:
                        name: $(a11yInsightsPool) # name parameter was not there added it
                        image: $(linuxImage)
                        os: linux

                    steps:
                        - template: pipeline/install-node-prerequisites.yaml@self

                        - script: yarn lint:check:all
                          displayName: check lint errors
                          timeoutInMinutes: 5

                        - script: yarn format:check
                          displayName: check formatting errors
                          timeoutInMinutes: 5

                        - script: yarn copyright:check
                          displayName: check copyrightheaders
                          timeoutInMinutes: 1

                        - script: yarn scss:build
                          displayName: generate typings for scss files
                          timeoutInMinutes: 3

                        - script: yarn type:check
                          displayName: type check code
                          timeoutInMinutes: 3

                        - script: yarn null:check
                          displayName: check for strictNullChecks violations
                          timeoutInMinutes: 5

                        # We set maxWorkers to 2 since our CI VMs have 2 cores and by default Jest only uses 1.
                        # If this were to change in the future, the number here should change accordingly.
                        - script: yarn test --maxWorkers=2 --ci
                          displayName: run unit tests
                          timeoutInMinutes: 25

                        - task: PublishTestResults@2
                          inputs:
                              testResultsFiles: $(System.DefaultWorkingDirectory)/test-results/unit/junit.xml
                              testRunTitle: $(Agent.JobName)
                          condition: always()
                          displayName: publish test results
                          timeoutInMinutes: 3

                        - task: PublishCodeCoverageResults@1
                          inputs:
                              codeCoverageTool: Cobertura
                              summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/cobertura-coverage.xml
                              failIfCoverageEmpty: true
                              # We care most about the summary information; adding the detailed files doesn't give enough extra information
                              # to be worth the 1min it adds to the build.
                              # Consider re-enabling this once https://github.com/Microsoft/azure-pipelines-tasks/issues/4945 is resolved.
                              # reportDirectory: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/lcov-report
                          displayName: publish code coverage
                          timeoutInMinutes: 5

                        - script: yarn publish-code-coverage -t $(CODECOV_TOKEN)
                          displayName: Publish code coverage to codecov
                          timeoutInMinutes: 3

                  - job: 'publish_build_drops'
                    templateContext:
                        outputs:
                            - output: buildArtifacts
                              displayName: publish drop
                              PathtoPublish: $(System.DefaultWorkingDirectory)/drop
                              ArtifactName: drop
                              timeoutInMinutes: 5

                    pool:
                        name: $(a11yInsightsPool)
                        image: $(linuxImage)
                        os: linux
                    steps:
                        - template: pipeline/install-node-prerequisites.yaml@self

                        - task: ComponentGovernanceComponentDetection@0
                          displayName: 'dependency detection (Component Governance)'
                          inputs:
                              detectorsFilter: Yarn
                              ignoreDirectories: 'drop,dist,extension,node_modules'
                              verbosity: Normal
                          timeoutInMinutes: 5

                        - task: msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0
                          displayName: 'generate NOTICE.html file'
                          inputs:
                              outputfile: '$(System.DefaultWorkingDirectory)/src/NOTICE.html'
                              outputformat: html
                          timeoutInMinutes: 5

                        - script: yarn build:all
                          displayName: build:all
                          timeoutInMinutes: 10

                  - job: 'e2e_report_linux'
                    pool:
                        name: $(a11yInsightsPool)
                        image: $(linuxImage)
                        os: linux
                    steps:
                        - template: pipeline/install-node-prerequisites.yaml@self

                        - script: yarn build:package:report
                          displayName: build report package
                          timeoutInMinutes: 5

                        - script: yarn test:report:e2e --ci
                          displayName: run report package e2e tests
                          timeoutInMinutes: 5

                        - task: PublishTestResults@2
                          inputs:
                              testResultsFiles: $(System.DefaultWorkingDirectory)/packages/report-e2e-tests/test-results/unit/junit.xml
                              testRunTitle: $(Agent.JobName)
                          condition: always()
                          displayName: publish test results
                          timeoutInMinutes: 3

                  - job: 'e2e_web_linux'
                    pool:
                        name: $(a11yInsightsPool)
                        image: $(linuxImage)
                        os: linux
                    steps:
                        - template: pipeline/install-node-prerequisites.yaml@self
                        - template: pipeline/run-tests-in-docker-linux.yaml@self
                          parameters:
                              target: web
                        - template: pipeline/e2e-test-publish-results.yaml@self
