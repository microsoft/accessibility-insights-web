# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Note that this Azure DevOps pipeline is largely redundant with /.github/workflows/ci.yml, which
# is what we use instead for validation builds of pull requests. This CI build only runs against
# pushes to main, not PRs; it exists in tandem with the GitHub Actions CI build because it
# integrates better with our ADO-based release process.

resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release 

# variables:
#     windowsImage: 'windows-2019'
#     macImage: 'macOS-11'
#     linuxImage: 'ubuntu-20.04'
#     Codeql.Enabled: true

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: a11y-insights-pool-prod  # Name of your hosted pool
      image: windows-2022-secure  # Name of the image in your pool. If not specified, first image of the pool is used
      os: windows  # OS of the image. Allowed values: windows, linux, macOS

      variables:
          windowsImage: 'windows-2022-secure'
          macImage: 'macOS-11'
          linuxImage: 'ubuntu-22.04-secure'
          Codeql.Enabled: true

      templateContext:
          outputs:
          - output: buildArtifacts
            displayName: publish drop
            PathtoPublish: $(System.DefaultWorkingDirectory)/drop
            ArtifactName: drop
            timeoutInMinutes: 5


    stages: 
    - stage: Stage


      jobs:
      - job: 'unit_tests_and_lints'

        pool:
          name: a11y-insights-pool-prod # name parameter was not there added it
          vmImage: $(linuxImage)

        steps:
          - template: pipeline/install-node-prerequisites.yaml
                
          - script: yarn lint:check:all
            displayName: check lint errors
            timeoutInMinutes: 5

          - script: yarn format:check
            displayName: check formatting errors
            timeoutInMinutes: 5

          - script: yarn copyright:check
            displayName: check copyrightheaders
            timeoutInMinutes: 1

          - script: yarn scss:build
            displayName: generate typings for scss files
            timeoutInMinutes: 3

          - script: yarn type:check
            displayName: type check code
            timeoutInMinutes: 3

          - script: yarn null:check
            displayName: check for strictNullChecks violations
            timeoutInMinutes: 5

          # We set maxWorkers to 2 since our CI VMs have 2 cores and by default Jest only uses 1.
          # If this were to change in the future, the number here should change accordingly.
          - script: yarn test --maxWorkers=2 --ci
            displayName: run unit tests
            timeoutInMinutes: 25

          - task: PublishTestResults@2
            inputs:
                testResultsFiles: $(System.DefaultWorkingDirectory)/test-results/unit/junit.xml
                testRunTitle: $(Agent.JobName)
            condition: always()
            displayName: publish test results
            timeoutInMinutes: 3

          - task: PublishCodeCoverageResults@1
            inputs:
                codeCoverageTool: Cobertura
                summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/cobertura-coverage.xml
                failIfCoverageEmpty: true
                # We care most about the summary information; adding the detailed files doesn't give enough extra information
                # to be worth the 1min it adds to the build.
                # Consider re-enabling this once https://github.com/Microsoft/azure-pipelines-tasks/issues/4945 is resolved.
                # reportDirectory: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/lcov-report
            displayName: publish code coverage
            timeoutInMinutes: 5

          - script: yarn publish-code-coverage -t $(CODECOV_TOKEN)
            displayName: Publish code coverage to codecov
            timeoutInMinutes: 3

      - job: 'publish_build_drops'
        pool:
          name: a11y-insights-pool-prod
          vmImage: $(linuxImage)
        steps:
          - template: pipeline/install-node-prerequisites.yaml

          - task: ComponentGovernanceComponentDetection@0
            displayName: 'dependency detection (Component Governance)'
            inputs:
                detectorsFilter: Yarn
                ignoreDirectories: 'drop,dist,extension,node_modules'
                verbosity: Normal
            timeoutInMinutes: 5

          - task: msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0
            displayName: 'generate NOTICE.html file'
            inputs:
                outputfile: '$(System.DefaultWorkingDirectory)/src/NOTICE.html'
                outputformat: html
            timeoutInMinutes: 5

          - script: yarn build:all
            displayName: build:all
            timeoutInMinutes: 10


      - job: 'e2e_report_linux'
        pool:
          name: a11y-insights-pool-prod
          vmImage: $(linuxImage)
        steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn build:package:report
            displayName: build report package
            timeoutInMinutes: 5

          - script: yarn test:report:e2e --ci
            displayName: run report package e2e tests
            timeoutInMinutes: 5

          - task: PublishTestResults@2
            inputs:
                testResultsFiles: $(System.DefaultWorkingDirectory)/packages/report-e2e-tests/test-results/unit/junit.xml
                testRunTitle: $(Agent.JobName)
            condition: always()
            displayName: publish test results
            timeoutInMinutes: 3

      - job: 'e2e_web_linux'
        pool:
          name: a11y-insights-pool-prod
          vmImage: $(linuxImage)
        steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/run-tests-in-docker-linux.yaml
            parameters:
                target: web
          - template: pipeline/e2e-test-publish-results.yaml
